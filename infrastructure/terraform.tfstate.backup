{
  "version": 4,
  "terraform_version": "1.8.3",
  "serial": 1537,
  "lineage": "cfb32bef-6542-a5c3-64c1-2e3076312a70",
  "outputs": {
    "eks-cluster": {
      "value": {
        "cluster_arn": "arn:aws:eks:us-east-1:339712838104:cluster/ekscluster",
        "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZnE0cFdJSDdNOU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1qTXdOekk0TWpkYUZ3MHpOREV4TWpFd056TXpNamRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURVYkdQQURQKzZXVTlvZ3ViRSs4RVNuV2lRUnlIaHFGWHg3YkFtY1RaSjJ4S1JuVllFQzRnZXBHZkEKZUxkTVRPN3IyRThNTHVkQ21vQzlqVHhndjdTTnQyK3c0Q0JYTzFWMVhlY3c2ak5oOXZMNFB3bDlJcC9mdFZLTAo1azliR2RpYmFyc0NYam5Ybkp0S3BzZWxZN2JzdzgrY0VHWU5Qem1IM2o0Z1BBSC81VVpnQXFGTG41YkJqdUlrCkErMTZlK2dkTjBFeER2OWtGdnRROG92YnRXa2NNZWlGYlZqZ3BNYm5QNmd5TzlrMzc4OS9vMWxKMHUxSTQwVmsKakNudlNhYjAvYTNvS3pIWllDZHY0OHhNVUVlNkpSZDZBYklTdkhaalZkU293WUhnZ0lKWWlUTFY1Yzc3bVpOcQp4MGxxcHMzdzUvQlhRM2xETEJSZ2pJTnI5Ry9KQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWkY3cGhZbWlLNjQ3eTNneFRnb2IwTVoxUFNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVvOFFLRlhZYgpSUXFndGRSdTRoMHhZdk96Q245VWtzcC9aTWRhbnp4VjhWeVJFSW9JMEJ6MjVDL3BpZlFtZU9mcFh0Zjhjb3ByCnY2dUlsYXpSZEhLamlRUEVqL3doQ1VPQXlXZUxYMTlMQmdUSDJuaFlvOW44dzFSZTEycCtXNDRpc1hUdWV0eksKL0sydytlSW50UkZ4U2lPVXUxWlhSK3dzdDl2a1lYWW5PMjNyK1R4aWRsMnVYb05FWjIwQ2gxd08yeVBsRld1eQpPMDVqS2FvTFBqUFdDL0lSYjhOZmVpdTlLYjIxTzRXaFZkaWpTeDQ3L0RoSmE2cVlSeG9KbUlUK1BOMEdrZlFQCmlVYmd1MTJFUzVwdlFOR0hlenlDZ3dBZEN2dnJlcFZObWFjK2xKeHplcGFkK2M4YzFjdUtnU1lPRzAxanpWdWEKVkszSDRBQXcydHNPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "cluster_endpoint": "https://649E59EF10663E5640E6B10C6085A2E0.gr7.us-east-1.eks.amazonaws.com",
        "cluster_iam_role_arn": "arn:aws:iam::339712838104:role/eks-master-role",
        "cluster_iam_role_name": "eks-master-role",
        "cluster_id": "ekscluster",
        "cluster_oidc_issuer_url": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
        "cluster_primary_security_group_id": "sg-0bb8c08f481ef2c67",
        "cluster_version": "1.31",
        "identity": [
          {
            "oidc": [
              {
                "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
              }
            ]
          }
        ],
        "node_group_public_arn": "arn:aws:eks:us-east-1:339712838104:nodegroup/ekscluster/eks-ng-public/3ac9abfa-1b54-86c5-fb61-92467486ca4c",
        "node_group_public_id": "ekscluster:eks-ng-public",
        "node_group_public_status": "ACTIVE",
        "node_group_public_version": "1.31"
      },
      "type": [
        "object",
        {
          "cluster_arn": "string",
          "cluster_certificate_authority_data": "string",
          "cluster_endpoint": "string",
          "cluster_iam_role_arn": "string",
          "cluster_iam_role_name": "string",
          "cluster_id": "string",
          "cluster_oidc_issuer_url": "string",
          "cluster_primary_security_group_id": "string",
          "cluster_version": "string",
          "identity": [
            "list",
            [
              "object",
              {
                "oidc": [
                  "list",
                  [
                    "object",
                    {
                      "issuer": "string"
                    }
                  ]
                ]
              }
            ]
          ],
          "node_group_public_arn": "string",
          "node_group_public_id": "string",
          "node_group_public_status": "string",
          "node_group_public_version": "string"
        }
      ]
    },
    "eks-oidc": {
      "value": {
        "aws_iam_openid_connect_provider_arn": "arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
        "aws_iam_openid_connect_provider_extract_from_arn": "oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
      },
      "type": [
        "object",
        {
          "aws_iam_openid_connect_provider_arn": "string",
          "aws_iam_openid_connect_provider_extract_from_arn": "string"
        }
      ]
    },
    "vpc": {
      "value": {
        "azs": [
          "us-east-1a",
          "us-east-1b"
        ],
        "cidr_blocks": "10.0.0.0/16",
        "database_subnets": [
          "subnet-09ec127f68b6d6f77",
          "subnet-094a1daaf674e437d"
        ],
        "private_subnets": [
          "subnet-0bd92c39c351103e0",
          "subnet-07baebba8fa24261f"
        ],
        "public_subnets": [
          "subnet-048969fd7775ea556",
          "subnet-05dc556ad99896454"
        ],
        "region": "us-east-1",
        "vpc_id": "vpc-04995685231f22c83"
      },
      "type": [
        "object",
        {
          "azs": [
            "list",
            "string"
          ],
          "cidr_blocks": "string",
          "database_subnets": [
            "tuple",
            [
              "string",
              "string"
            ]
          ],
          "private_subnets": [
            "tuple",
            [
              "string",
              "string"
            ]
          ],
          "public_subnets": [
            "tuple",
            [
              "string",
              "string"
            ]
          ],
          "region": "string",
          "vpc_id": "string"
        }
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_eks_cluster",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": true
              }
            ],
            "arn": "arn:aws:eks:us-east-1:339712838104:cluster/ekscluster",
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZnE0cFdJSDdNOU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1qTXdOekk0TWpkYUZ3MHpOREV4TWpFd056TXpNamRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURVYkdQQURQKzZXVTlvZ3ViRSs4RVNuV2lRUnlIaHFGWHg3YkFtY1RaSjJ4S1JuVllFQzRnZXBHZkEKZUxkTVRPN3IyRThNTHVkQ21vQzlqVHhndjdTTnQyK3c0Q0JYTzFWMVhlY3c2ak5oOXZMNFB3bDlJcC9mdFZLTAo1azliR2RpYmFyc0NYam5Ybkp0S3BzZWxZN2JzdzgrY0VHWU5Qem1IM2o0Z1BBSC81VVpnQXFGTG41YkJqdUlrCkErMTZlK2dkTjBFeER2OWtGdnRROG92YnRXa2NNZWlGYlZqZ3BNYm5QNmd5TzlrMzc4OS9vMWxKMHUxSTQwVmsKakNudlNhYjAvYTNvS3pIWllDZHY0OHhNVUVlNkpSZDZBYklTdkhaalZkU293WUhnZ0lKWWlUTFY1Yzc3bVpOcQp4MGxxcHMzdzUvQlhRM2xETEJSZ2pJTnI5Ry9KQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWkY3cGhZbWlLNjQ3eTNneFRnb2IwTVoxUFNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVvOFFLRlhZYgpSUXFndGRSdTRoMHhZdk96Q245VWtzcC9aTWRhbnp4VjhWeVJFSW9JMEJ6MjVDL3BpZlFtZU9mcFh0Zjhjb3ByCnY2dUlsYXpSZEhLamlRUEVqL3doQ1VPQXlXZUxYMTlMQmdUSDJuaFlvOW44dzFSZTEycCtXNDRpc1hUdWV0eksKL0sydytlSW50UkZ4U2lPVXUxWlhSK3dzdDl2a1lYWW5PMjNyK1R4aWRsMnVYb05FWjIwQ2gxd08yeVBsRld1eQpPMDVqS2FvTFBqUFdDL0lSYjhOZmVpdTlLYjIxTzRXaFZkaWpTeDQ3L0RoSmE2cVlSeG9KbUlUK1BOMEdrZlFQCmlVYmd1MTJFUzVwdlFOR0hlenlDZ3dBZEN2dnJlcFZObWFjK2xKeHplcGFkK2M4YzFjdUtnU1lPRzAxanpWdWEKVkszSDRBQXcydHNPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-11-23T07:28:26Z",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator",
              "controllerManager",
              "scheduler"
            ],
            "endpoint": "https://649E59EF10663E5640E6B10C6085A2E0.gr7.us-east-1.eks.amazonaws.com",
            "id": "ekscluster",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "ekscluster",
            "outpost_config": [],
            "platform_version": "eks.12",
            "role_arn": "arn:aws:iam::339712838104:role/eks-master-role",
            "status": "ACTIVE",
            "tags": {},
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.31",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0bb8c08f481ef2c67",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [],
                "subnet_ids": [
                  "subnet-048969fd7775ea556",
                  "subnet-05dc556ad99896454"
                ],
                "vpc_id": "vpc-04995685231f22c83"
              }
            ],
            "zonal_shift_config": []
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_eks_cluster_auth",
      "name": "cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "ekscluster",
            "name": "ekscluster",
            "token": "k8s-aws-v1.aHR0cHM6Ly9zdHMudXMtZWFzdC0xLmFtYXpvbmF3cy5jb20vP0FjdGlvbj1HZXRDYWxsZXJJZGVudGl0eSZWZXJzaW9uPTIwMTEtMDYtMTUmWC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVTZHRFdSSE1CN0haSkJSQiUyRjIwMjQxMTIzJTJGdXMtZWFzdC0xJTJGc3RzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDExMjNUMTI0ODE1WiZYLUFtei1FeHBpcmVzPTAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JTNCeC1rOHMtYXdzLWlkJlgtQW16LVNpZ25hdHVyZT00MjllMmRiNjkyNDFkNDZhMWMyOGViZTQ0YjEwZjhlYmUzMmE0NDAzYWY1ZGYwOGQ5N2EwNzgxMzgzMzM4NzU4"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "token"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "eks",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "./terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "eks-cluster": {
                  "cluster_arn": "arn:aws:eks:us-east-1:339712838104:cluster/ekscluster",
                  "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZnE0cFdJSDdNOU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1qTXdOekk0TWpkYUZ3MHpOREV4TWpFd056TXpNamRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURVYkdQQURQKzZXVTlvZ3ViRSs4RVNuV2lRUnlIaHFGWHg3YkFtY1RaSjJ4S1JuVllFQzRnZXBHZkEKZUxkTVRPN3IyRThNTHVkQ21vQzlqVHhndjdTTnQyK3c0Q0JYTzFWMVhlY3c2ak5oOXZMNFB3bDlJcC9mdFZLTAo1azliR2RpYmFyc0NYam5Ybkp0S3BzZWxZN2JzdzgrY0VHWU5Qem1IM2o0Z1BBSC81VVpnQXFGTG41YkJqdUlrCkErMTZlK2dkTjBFeER2OWtGdnRROG92YnRXa2NNZWlGYlZqZ3BNYm5QNmd5TzlrMzc4OS9vMWxKMHUxSTQwVmsKakNudlNhYjAvYTNvS3pIWllDZHY0OHhNVUVlNkpSZDZBYklTdkhaalZkU293WUhnZ0lKWWlUTFY1Yzc3bVpOcQp4MGxxcHMzdzUvQlhRM2xETEJSZ2pJTnI5Ry9KQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWkY3cGhZbWlLNjQ3eTNneFRnb2IwTVoxUFNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVvOFFLRlhZYgpSUXFndGRSdTRoMHhZdk96Q245VWtzcC9aTWRhbnp4VjhWeVJFSW9JMEJ6MjVDL3BpZlFtZU9mcFh0Zjhjb3ByCnY2dUlsYXpSZEhLamlRUEVqL3doQ1VPQXlXZUxYMTlMQmdUSDJuaFlvOW44dzFSZTEycCtXNDRpc1hUdWV0eksKL0sydytlSW50UkZ4U2lPVXUxWlhSK3dzdDl2a1lYWW5PMjNyK1R4aWRsMnVYb05FWjIwQ2gxd08yeVBsRld1eQpPMDVqS2FvTFBqUFdDL0lSYjhOZmVpdTlLYjIxTzRXaFZkaWpTeDQ3L0RoSmE2cVlSeG9KbUlUK1BOMEdrZlFQCmlVYmd1MTJFUzVwdlFOR0hlenlDZ3dBZEN2dnJlcFZObWFjK2xKeHplcGFkK2M4YzFjdUtnU1lPRzAxanpWdWEKVkszSDRBQXcydHNPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "cluster_endpoint": "https://649E59EF10663E5640E6B10C6085A2E0.gr7.us-east-1.eks.amazonaws.com",
                  "cluster_iam_role_arn": "arn:aws:iam::339712838104:role/eks-master-role",
                  "cluster_iam_role_name": "eks-master-role",
                  "cluster_id": "ekscluster",
                  "cluster_oidc_issuer_url": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
                  "cluster_primary_security_group_id": "sg-0bb8c08f481ef2c67",
                  "cluster_version": "1.31",
                  "identity": [
                    {
                      "oidc": [
                        {
                          "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                        }
                      ]
                    }
                  ],
                  "node_group_public_arn": "arn:aws:eks:us-east-1:339712838104:nodegroup/ekscluster/eks-ng-public/3ac9abfa-1b54-86c5-fb61-92467486ca4c",
                  "node_group_public_id": "ekscluster:eks-ng-public",
                  "node_group_public_status": "ACTIVE",
                  "node_group_public_version": "1.31"
                },
                "eks-oidc": {
                  "aws_iam_openid_connect_provider_arn": "arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
                  "aws_iam_openid_connect_provider_extract_from_arn": "oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                },
                "vpc": {
                  "azs": [
                    "us-east-1a",
                    "us-east-1b"
                  ],
                  "cidr_blocks": "10.0.0.0/16",
                  "database_subnets": [
                    "subnet-09ec127f68b6d6f77",
                    "subnet-094a1daaf674e437d"
                  ],
                  "private_subnets": [
                    "subnet-0bd92c39c351103e0",
                    "subnet-07baebba8fa24261f"
                  ],
                  "public_subnets": [
                    "subnet-048969fd7775ea556",
                    "subnet-05dc556ad99896454"
                  ],
                  "region": "us-east-1",
                  "vpc_id": "vpc-04995685231f22c83"
                }
              },
              "type": [
                "object",
                {
                  "eks-cluster": [
                    "object",
                    {
                      "cluster_arn": "string",
                      "cluster_certificate_authority_data": "string",
                      "cluster_endpoint": "string",
                      "cluster_iam_role_arn": "string",
                      "cluster_iam_role_name": "string",
                      "cluster_id": "string",
                      "cluster_oidc_issuer_url": "string",
                      "cluster_primary_security_group_id": "string",
                      "cluster_version": "string",
                      "identity": [
                        "list",
                        [
                          "object",
                          {
                            "oidc": [
                              "list",
                              [
                                "object",
                                {
                                  "issuer": "string"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "node_group_public_arn": "string",
                      "node_group_public_id": "string",
                      "node_group_public_status": "string",
                      "node_group_public_version": "string"
                    }
                  ],
                  "eks-oidc": [
                    "object",
                    {
                      "aws_iam_openid_connect_provider_arn": "string",
                      "aws_iam_openid_connect_provider_extract_from_arn": "string"
                    }
                  ],
                  "vpc": [
                    "object",
                    {
                      "azs": [
                        "list",
                        "string"
                      ],
                      "cidr_blocks": "string",
                      "database_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "private_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "public_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "region": "string",
                      "vpc_id": "string"
                    }
                  ]
                }
              ]
            },
            "workspace": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-autoscaler",
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "eks",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "../infrastructure/terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "eks-cluster": {
                  "cluster_arn": "arn:aws:eks:us-east-1:339712838104:cluster/ekscluster",
                  "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZnE0cFdJSDdNOU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1qTXdOekk0TWpkYUZ3MHpOREV4TWpFd056TXpNamRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURVYkdQQURQKzZXVTlvZ3ViRSs4RVNuV2lRUnlIaHFGWHg3YkFtY1RaSjJ4S1JuVllFQzRnZXBHZkEKZUxkTVRPN3IyRThNTHVkQ21vQzlqVHhndjdTTnQyK3c0Q0JYTzFWMVhlY3c2ak5oOXZMNFB3bDlJcC9mdFZLTAo1azliR2RpYmFyc0NYam5Ybkp0S3BzZWxZN2JzdzgrY0VHWU5Qem1IM2o0Z1BBSC81VVpnQXFGTG41YkJqdUlrCkErMTZlK2dkTjBFeER2OWtGdnRROG92YnRXa2NNZWlGYlZqZ3BNYm5QNmd5TzlrMzc4OS9vMWxKMHUxSTQwVmsKakNudlNhYjAvYTNvS3pIWllDZHY0OHhNVUVlNkpSZDZBYklTdkhaalZkU293WUhnZ0lKWWlUTFY1Yzc3bVpOcQp4MGxxcHMzdzUvQlhRM2xETEJSZ2pJTnI5Ry9KQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWkY3cGhZbWlLNjQ3eTNneFRnb2IwTVoxUFNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVvOFFLRlhZYgpSUXFndGRSdTRoMHhZdk96Q245VWtzcC9aTWRhbnp4VjhWeVJFSW9JMEJ6MjVDL3BpZlFtZU9mcFh0Zjhjb3ByCnY2dUlsYXpSZEhLamlRUEVqL3doQ1VPQXlXZUxYMTlMQmdUSDJuaFlvOW44dzFSZTEycCtXNDRpc1hUdWV0eksKL0sydytlSW50UkZ4U2lPVXUxWlhSK3dzdDl2a1lYWW5PMjNyK1R4aWRsMnVYb05FWjIwQ2gxd08yeVBsRld1eQpPMDVqS2FvTFBqUFdDL0lSYjhOZmVpdTlLYjIxTzRXaFZkaWpTeDQ3L0RoSmE2cVlSeG9KbUlUK1BOMEdrZlFQCmlVYmd1MTJFUzVwdlFOR0hlenlDZ3dBZEN2dnJlcFZObWFjK2xKeHplcGFkK2M4YzFjdUtnU1lPRzAxanpWdWEKVkszSDRBQXcydHNPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "cluster_endpoint": "https://649E59EF10663E5640E6B10C6085A2E0.gr7.us-east-1.eks.amazonaws.com",
                  "cluster_iam_role_arn": "arn:aws:iam::339712838104:role/eks-master-role",
                  "cluster_iam_role_name": "eks-master-role",
                  "cluster_id": "ekscluster",
                  "cluster_oidc_issuer_url": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
                  "cluster_primary_security_group_id": "sg-0bb8c08f481ef2c67",
                  "cluster_version": "1.31",
                  "identity": [
                    {
                      "oidc": [
                        {
                          "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                        }
                      ]
                    }
                  ],
                  "node_group_public_arn": "arn:aws:eks:us-east-1:339712838104:nodegroup/ekscluster/eks-ng-public/3ac9abfa-1b54-86c5-fb61-92467486ca4c",
                  "node_group_public_id": "ekscluster:eks-ng-public",
                  "node_group_public_status": "ACTIVE",
                  "node_group_public_version": "1.31"
                },
                "eks-oidc": {
                  "aws_iam_openid_connect_provider_arn": "arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
                  "aws_iam_openid_connect_provider_extract_from_arn": "oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                },
                "vpc": {
                  "azs": [
                    "us-east-1a",
                    "us-east-1b"
                  ],
                  "cidr_blocks": "10.0.0.0/16",
                  "database_subnets": [
                    "subnet-09ec127f68b6d6f77",
                    "subnet-094a1daaf674e437d"
                  ],
                  "private_subnets": [
                    "subnet-0bd92c39c351103e0",
                    "subnet-07baebba8fa24261f"
                  ],
                  "public_subnets": [
                    "subnet-048969fd7775ea556",
                    "subnet-05dc556ad99896454"
                  ],
                  "region": "us-east-1",
                  "vpc_id": "vpc-04995685231f22c83"
                }
              },
              "type": [
                "object",
                {
                  "eks-cluster": [
                    "object",
                    {
                      "cluster_arn": "string",
                      "cluster_certificate_authority_data": "string",
                      "cluster_endpoint": "string",
                      "cluster_iam_role_arn": "string",
                      "cluster_iam_role_name": "string",
                      "cluster_id": "string",
                      "cluster_oidc_issuer_url": "string",
                      "cluster_primary_security_group_id": "string",
                      "cluster_version": "string",
                      "identity": [
                        "list",
                        [
                          "object",
                          {
                            "oidc": [
                              "list",
                              [
                                "object",
                                {
                                  "issuer": "string"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "node_group_public_arn": "string",
                      "node_group_public_id": "string",
                      "node_group_public_status": "string",
                      "node_group_public_version": "string"
                    }
                  ],
                  "eks-oidc": [
                    "object",
                    {
                      "aws_iam_openid_connect_provider_arn": "string",
                      "aws_iam_openid_connect_provider_extract_from_arn": "string"
                    }
                  ],
                  "vpc": [
                    "object",
                    {
                      "azs": [
                        "list",
                        "string"
                      ],
                      "cidr_blocks": "string",
                      "database_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "private_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "public_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "region": "string",
                      "vpc_id": "string"
                    }
                  ]
                }
              ]
            },
            "workspace": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-autoscaler",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "cluster_autoscaler_iam_policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::339712838104:policy/AmazonEKSClusterAutoscalerPolicy",
            "attachment_count": 1,
            "description": "EKS Cluster Autoscaler Policy",
            "id": "arn:aws:iam::339712838104:policy/AmazonEKSClusterAutoscalerPolicy",
            "name": "AmazonEKSClusterAutoscalerPolicy",
            "name_prefix": "",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":[\"autoscaling:DescribeAutoScalingGroups\",\"autoscaling:DescribeAutoScalingInstances\",\"autoscaling:DescribeInstances\",\"autoscaling:DescribeLaunchConfigurations\",\"autoscaling:DescribeTags\",\"autoscaling:SetDesiredCapacity\",\"autoscaling:TerminateInstanceInAutoScalingGroup\",\"ec2:DescribeLaunchTemplateVersions\",\"ec2:DescribeInstanceTypes\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAU6GDWRHMB6XRGRT3K",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.eks-autoscaler",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "irsa-role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::339712838104:role/cluster-autoscaler-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0:sub\":\"system:serviceaccount:kube-system:cluster-autoscaler\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0\"},\"Sid\":\"\"}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-23T08:26:14Z",
            "description": "",
            "force_detach_policies": false,
            "id": "cluster-autoscaler-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::339712838104:policy/AmazonEKSClusterAutoscalerPolicy"
            ],
            "max_session_duration": 3600,
            "name": "cluster-autoscaler-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {
              "tag-key": "cluster-autoscaler-role"
            },
            "tags_all": {
              "tag-key": "cluster-autoscaler-role"
            },
            "unique_id": "AROAU6GDWRHMJPEXIBQ3T"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-autoscaler.data.terraform_remote_state.eks"
          ]
        }
      ]
    },
    {
      "module": "module.eks-autoscaler",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "irsa_iam_role_policy_attach",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "cluster-autoscaler-role-20241123082616528700000001",
            "policy_arn": "arn:aws:iam::339712838104:policy/AmazonEKSClusterAutoscalerPolicy",
            "role": "cluster-autoscaler-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-autoscaler.aws_iam_policy.cluster_autoscaler_iam_policy",
            "module.eks-autoscaler.aws_iam_role.irsa-role",
            "module.eks-autoscaler.data.terraform_remote_state.eks"
          ]
        }
      ]
    },
    {
      "module": "module.eks-autoscaler",
      "mode": "managed",
      "type": "helm_release",
      "name": "cluster_autoscaler_release",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "cluster-autoscaler",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "cluster-autoscaler-ca",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "1.31.0",
                "chart": "cluster-autoscaler",
                "first_deployed": 1732350381,
                "last_deployed": 1732350381,
                "name": "cluster-autoscaler-ca",
                "namespace": "kube-system",
                "notes": "\n\nTo verify that cluster-autoscaler has started, run:\n\n  kubectl --namespace=kube-system get pods -l \"app.kubernetes.io/name=aws-cluster-autoscaler,app.kubernetes.io/instance=cluster-autoscaler-ca\"",
                "revision": 1,
                "values": "{\"autoDiscovery\":{\"clusterName\":\"ekscluster\"},\"awsRegion\":\"us-east-1\",\"cloudProvider\":\"aws\",\"rbac\":{\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::339712838104:role/cluster-autoscaler-role\"},\"create\":false,\"name\":\"cluster-autoscaler\"}}}",
                "version": "9.43.2"
              }
            ],
            "name": "cluster-autoscaler-ca",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://kubernetes.github.io/autoscaler",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "autoDiscovery.clusterName",
                "type": "",
                "value": "ekscluster"
              },
              {
                "name": "awsRegion",
                "type": "",
                "value": "us-east-1"
              },
              {
                "name": "cloudProvider",
                "type": "",
                "value": "aws"
              },
              {
                "name": "rbac.serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::339712838104:role/cluster-autoscaler-role"
              },
              {
                "name": "rbac.serviceAccount.create",
                "type": "",
                "value": "false"
              },
              {
                "name": "rbac.serviceAccount.name",
                "type": "",
                "value": "cluster-autoscaler"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "9.43.2",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.terraform_remote_state.eks",
            "module.eks-autoscaler.aws_iam_role.irsa-role",
            "module.eks-autoscaler.data.terraform_remote_state.eks"
          ]
        }
      ]
    },
    {
      "module": "module.eks-autoscaler",
      "mode": "managed",
      "type": "kubernetes_service_account_v1",
      "name": "irsa_demo_sa",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "automount_service_account_token": true,
            "default_secret_name": "",
            "id": "kube-system/cluster-autoscaler",
            "image_pull_secret": [],
            "metadata": [
              {
                "annotations": {
                  "eks.amazonaws.com/role-arn": "arn:aws:iam::339712838104:role/cluster-autoscaler-role"
                },
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "cluster-autoscaler",
                "namespace": "kube-system",
                "resource_version": "10033",
                "uid": "4656ef2e-8516-4a1d-8085-00a780d462c8"
              }
            ],
            "secret": [],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMH19",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.terraform_remote_state.eks",
            "module.eks-autoscaler.aws_iam_policy.cluster_autoscaler_iam_policy",
            "module.eks-autoscaler.aws_iam_role.irsa-role",
            "module.eks-autoscaler.aws_iam_role_policy_attachment.irsa_iam_role_policy_attach",
            "module.eks-autoscaler.data.terraform_remote_state.eks"
          ]
        }
      ]
    },
    {
      "module": "module.eks-cluster",
      "mode": "managed",
      "type": "aws_eks_cluster",
      "name": "eks_cluster",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "access_config": [
              {
                "authentication_mode": "CONFIG_MAP",
                "bootstrap_cluster_creator_admin_permissions": true
              }
            ],
            "arn": "arn:aws:eks:us-east-1:339712838104:cluster/ekscluster",
            "bootstrap_self_managed_addons": true,
            "certificate_authority": [
              {
                "data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZnE0cFdJSDdNOU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1qTXdOekk0TWpkYUZ3MHpOREV4TWpFd056TXpNamRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURVYkdQQURQKzZXVTlvZ3ViRSs4RVNuV2lRUnlIaHFGWHg3YkFtY1RaSjJ4S1JuVllFQzRnZXBHZkEKZUxkTVRPN3IyRThNTHVkQ21vQzlqVHhndjdTTnQyK3c0Q0JYTzFWMVhlY3c2ak5oOXZMNFB3bDlJcC9mdFZLTAo1azliR2RpYmFyc0NYam5Ybkp0S3BzZWxZN2JzdzgrY0VHWU5Qem1IM2o0Z1BBSC81VVpnQXFGTG41YkJqdUlrCkErMTZlK2dkTjBFeER2OWtGdnRROG92YnRXa2NNZWlGYlZqZ3BNYm5QNmd5TzlrMzc4OS9vMWxKMHUxSTQwVmsKakNudlNhYjAvYTNvS3pIWllDZHY0OHhNVUVlNkpSZDZBYklTdkhaalZkU293WUhnZ0lKWWlUTFY1Yzc3bVpOcQp4MGxxcHMzdzUvQlhRM2xETEJSZ2pJTnI5Ry9KQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWkY3cGhZbWlLNjQ3eTNneFRnb2IwTVoxUFNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVvOFFLRlhZYgpSUXFndGRSdTRoMHhZdk96Q245VWtzcC9aTWRhbnp4VjhWeVJFSW9JMEJ6MjVDL3BpZlFtZU9mcFh0Zjhjb3ByCnY2dUlsYXpSZEhLamlRUEVqL3doQ1VPQXlXZUxYMTlMQmdUSDJuaFlvOW44dzFSZTEycCtXNDRpc1hUdWV0eksKL0sydytlSW50UkZ4U2lPVXUxWlhSK3dzdDl2a1lYWW5PMjNyK1R4aWRsMnVYb05FWjIwQ2gxd08yeVBsRld1eQpPMDVqS2FvTFBqUFdDL0lSYjhOZmVpdTlLYjIxTzRXaFZkaWpTeDQ3L0RoSmE2cVlSeG9KbUlUK1BOMEdrZlFQCmlVYmd1MTJFUzVwdlFOR0hlenlDZ3dBZEN2dnJlcFZObWFjK2xKeHplcGFkK2M4YzFjdUtnU1lPRzAxanpWdWEKVkszSDRBQXcydHNPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
              }
            ],
            "cluster_id": null,
            "created_at": "2024-11-23T07:28:26Z",
            "enabled_cluster_log_types": [
              "api",
              "audit",
              "authenticator",
              "controllerManager",
              "scheduler"
            ],
            "encryption_config": [],
            "endpoint": "https://649E59EF10663E5640E6B10C6085A2E0.gr7.us-east-1.eks.amazonaws.com",
            "id": "ekscluster",
            "identity": [
              {
                "oidc": [
                  {
                    "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                  }
                ]
              }
            ],
            "kubernetes_network_config": [
              {
                "ip_family": "ipv4",
                "service_ipv4_cidr": "172.20.0.0/16",
                "service_ipv6_cidr": ""
              }
            ],
            "name": "ekscluster",
            "outpost_config": [],
            "platform_version": "eks.12",
            "role_arn": "arn:aws:iam::339712838104:role/eks-master-role",
            "status": "ACTIVE",
            "tags": {},
            "tags_all": {},
            "timeouts": null,
            "upgrade_policy": [
              {
                "support_type": "EXTENDED"
              }
            ],
            "version": "1.31",
            "vpc_config": [
              {
                "cluster_security_group_id": "sg-0bb8c08f481ef2c67",
                "endpoint_private_access": false,
                "endpoint_public_access": true,
                "public_access_cidrs": [
                  "0.0.0.0/0"
                ],
                "security_group_ids": [],
                "subnet_ids": [
                  "subnet-048969fd7775ea556",
                  "subnet-05dc556ad99896454"
                ],
                "vpc_id": "vpc-04995685231f22c83"
              }
            ],
            "zonal_shift_config": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjkwMDAwMDAwMDAwMCwidXBkYXRlIjozNjAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.eks-cluster.aws_iam_role.eks_master_role",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKSClusterPolicy",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKSVPCResourceController",
            "module.vpc.module.vpc.aws_cloudwatch_log_group.flow_log",
            "module.vpc.module.vpc.aws_customer_gateway.this",
            "module.vpc.module.vpc.aws_db_subnet_group.database",
            "module.vpc.module.vpc.aws_default_network_acl.this",
            "module.vpc.module.vpc.aws_default_route_table.default",
            "module.vpc.module.vpc.aws_default_security_group.this",
            "module.vpc.module.vpc.aws_default_vpc.this",
            "module.vpc.module.vpc.aws_egress_only_internet_gateway.this",
            "module.vpc.module.vpc.aws_eip.nat",
            "module.vpc.module.vpc.aws_elasticache_subnet_group.elasticache",
            "module.vpc.module.vpc.aws_flow_log.this",
            "module.vpc.module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch",
            "module.vpc.module.vpc.aws_iam_role.vpc_flow_log_cloudwatch",
            "module.vpc.module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
            "module.vpc.module.vpc.aws_internet_gateway.this",
            "module.vpc.module.vpc.aws_nat_gateway.this",
            "module.vpc.module.vpc.aws_network_acl.database",
            "module.vpc.module.vpc.aws_network_acl.elasticache",
            "module.vpc.module.vpc.aws_network_acl.intra",
            "module.vpc.module.vpc.aws_network_acl.outpost",
            "module.vpc.module.vpc.aws_network_acl.private",
            "module.vpc.module.vpc.aws_network_acl.public",
            "module.vpc.module.vpc.aws_network_acl.redshift",
            "module.vpc.module.vpc.aws_network_acl_rule.database_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.database_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.elasticache_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.elasticache_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.intra_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.intra_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.outpost_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.outpost_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.private_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.private_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.public_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.public_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.redshift_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.redshift_outbound",
            "module.vpc.module.vpc.aws_redshift_subnet_group.redshift",
            "module.vpc.module.vpc.aws_route.database_dns64_nat_gateway",
            "module.vpc.module.vpc.aws_route.database_internet_gateway",
            "module.vpc.module.vpc.aws_route.database_ipv6_egress",
            "module.vpc.module.vpc.aws_route.database_nat_gateway",
            "module.vpc.module.vpc.aws_route.private_dns64_nat_gateway",
            "module.vpc.module.vpc.aws_route.private_ipv6_egress",
            "module.vpc.module.vpc.aws_route.private_nat_gateway",
            "module.vpc.module.vpc.aws_route.public_internet_gateway",
            "module.vpc.module.vpc.aws_route.public_internet_gateway_ipv6",
            "module.vpc.module.vpc.aws_route_table.database",
            "module.vpc.module.vpc.aws_route_table.elasticache",
            "module.vpc.module.vpc.aws_route_table.intra",
            "module.vpc.module.vpc.aws_route_table.private",
            "module.vpc.module.vpc.aws_route_table.public",
            "module.vpc.module.vpc.aws_route_table.redshift",
            "module.vpc.module.vpc.aws_route_table_association.database",
            "module.vpc.module.vpc.aws_route_table_association.elasticache",
            "module.vpc.module.vpc.aws_route_table_association.intra",
            "module.vpc.module.vpc.aws_route_table_association.outpost",
            "module.vpc.module.vpc.aws_route_table_association.private",
            "module.vpc.module.vpc.aws_route_table_association.public",
            "module.vpc.module.vpc.aws_route_table_association.redshift",
            "module.vpc.module.vpc.aws_route_table_association.redshift_public",
            "module.vpc.module.vpc.aws_subnet.database",
            "module.vpc.module.vpc.aws_subnet.elasticache",
            "module.vpc.module.vpc.aws_subnet.intra",
            "module.vpc.module.vpc.aws_subnet.outpost",
            "module.vpc.module.vpc.aws_subnet.private",
            "module.vpc.module.vpc.aws_subnet.public",
            "module.vpc.module.vpc.aws_subnet.redshift",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_dhcp_options.this",
            "module.vpc.module.vpc.aws_vpc_dhcp_options_association.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.vpc.module.vpc.aws_vpn_gateway.this",
            "module.vpc.module.vpc.aws_vpn_gateway_attachment.this",
            "module.vpc.module.vpc.aws_vpn_gateway_route_propagation.intra",
            "module.vpc.module.vpc.aws_vpn_gateway_route_propagation.private",
            "module.vpc.module.vpc.aws_vpn_gateway_route_propagation.public",
            "module.vpc.module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
            "module.vpc.module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
          ]
        }
      ]
    },
    {
      "module": "module.eks-cluster",
      "mode": "managed",
      "type": "aws_eks_node_group",
      "name": "eks_ng_public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "ami_type": "AL2_x86_64",
            "arn": "arn:aws:eks:us-east-1:339712838104:nodegroup/ekscluster/eks-ng-public/3ac9abfa-1b54-86c5-fb61-92467486ca4c",
            "capacity_type": "ON_DEMAND",
            "cluster_name": "ekscluster",
            "disk_size": 20,
            "force_update_version": null,
            "id": "ekscluster:eks-ng-public",
            "instance_types": [
              "t3.large"
            ],
            "labels": {},
            "launch_template": [],
            "node_group_name": "eks-ng-public",
            "node_group_name_prefix": "",
            "node_role_arn": "arn:aws:iam::339712838104:role/eks-nodegroup-role",
            "release_version": "1.31.2-20241115",
            "remote_access": [
              {
                "ec2_ssh_key": "Webkey",
                "source_security_group_ids": []
              }
            ],
            "resources": [
              {
                "autoscaling_groups": [
                  {
                    "name": "eks-eks-ng-public-3ac9abfa-1b54-86c5-fb61-92467486ca4c"
                  }
                ],
                "remote_access_security_group_id": "sg-0a6ff2adea540a669"
              }
            ],
            "scaling_config": [
              {
                "desired_size": 2,
                "max_size": 3,
                "min_size": 2
              }
            ],
            "status": "ACTIVE",
            "subnet_ids": [
              "subnet-048969fd7775ea556",
              "subnet-05dc556ad99896454"
            ],
            "tags": {
              "Name": "Public-Node-Group"
            },
            "tags_all": {
              "Name": "Public-Node-Group"
            },
            "taint": [],
            "timeouts": null,
            "update_config": [
              {
                "max_unavailable": 1,
                "max_unavailable_percentage": 0
              }
            ],
            "version": "1.31"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozNjAwMDAwMDAwMDAwLCJkZWxldGUiOjM2MDAwMDAwMDAwMDAsInVwZGF0ZSI6MzYwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.eks-cluster.aws_eks_cluster.eks_cluster",
            "module.eks-cluster.aws_iam_role.eks_master_role",
            "module.eks-cluster.aws_iam_role.eks_nodegroup_role",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEC2ContainerRegistryReadOnly",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKSClusterPolicy",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKSVPCResourceController",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKSWorkerNodePolicy",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKS_CNI_Policy",
            "module.vpc.module.vpc.aws_cloudwatch_log_group.flow_log",
            "module.vpc.module.vpc.aws_customer_gateway.this",
            "module.vpc.module.vpc.aws_db_subnet_group.database",
            "module.vpc.module.vpc.aws_default_network_acl.this",
            "module.vpc.module.vpc.aws_default_route_table.default",
            "module.vpc.module.vpc.aws_default_security_group.this",
            "module.vpc.module.vpc.aws_default_vpc.this",
            "module.vpc.module.vpc.aws_egress_only_internet_gateway.this",
            "module.vpc.module.vpc.aws_eip.nat",
            "module.vpc.module.vpc.aws_elasticache_subnet_group.elasticache",
            "module.vpc.module.vpc.aws_flow_log.this",
            "module.vpc.module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch",
            "module.vpc.module.vpc.aws_iam_role.vpc_flow_log_cloudwatch",
            "module.vpc.module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
            "module.vpc.module.vpc.aws_internet_gateway.this",
            "module.vpc.module.vpc.aws_nat_gateway.this",
            "module.vpc.module.vpc.aws_network_acl.database",
            "module.vpc.module.vpc.aws_network_acl.elasticache",
            "module.vpc.module.vpc.aws_network_acl.intra",
            "module.vpc.module.vpc.aws_network_acl.outpost",
            "module.vpc.module.vpc.aws_network_acl.private",
            "module.vpc.module.vpc.aws_network_acl.public",
            "module.vpc.module.vpc.aws_network_acl.redshift",
            "module.vpc.module.vpc.aws_network_acl_rule.database_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.database_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.elasticache_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.elasticache_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.intra_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.intra_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.outpost_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.outpost_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.private_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.private_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.public_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.public_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.redshift_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.redshift_outbound",
            "module.vpc.module.vpc.aws_redshift_subnet_group.redshift",
            "module.vpc.module.vpc.aws_route.database_dns64_nat_gateway",
            "module.vpc.module.vpc.aws_route.database_internet_gateway",
            "module.vpc.module.vpc.aws_route.database_ipv6_egress",
            "module.vpc.module.vpc.aws_route.database_nat_gateway",
            "module.vpc.module.vpc.aws_route.private_dns64_nat_gateway",
            "module.vpc.module.vpc.aws_route.private_ipv6_egress",
            "module.vpc.module.vpc.aws_route.private_nat_gateway",
            "module.vpc.module.vpc.aws_route.public_internet_gateway",
            "module.vpc.module.vpc.aws_route.public_internet_gateway_ipv6",
            "module.vpc.module.vpc.aws_route_table.database",
            "module.vpc.module.vpc.aws_route_table.elasticache",
            "module.vpc.module.vpc.aws_route_table.intra",
            "module.vpc.module.vpc.aws_route_table.private",
            "module.vpc.module.vpc.aws_route_table.public",
            "module.vpc.module.vpc.aws_route_table.redshift",
            "module.vpc.module.vpc.aws_route_table_association.database",
            "module.vpc.module.vpc.aws_route_table_association.elasticache",
            "module.vpc.module.vpc.aws_route_table_association.intra",
            "module.vpc.module.vpc.aws_route_table_association.outpost",
            "module.vpc.module.vpc.aws_route_table_association.private",
            "module.vpc.module.vpc.aws_route_table_association.public",
            "module.vpc.module.vpc.aws_route_table_association.redshift",
            "module.vpc.module.vpc.aws_route_table_association.redshift_public",
            "module.vpc.module.vpc.aws_subnet.database",
            "module.vpc.module.vpc.aws_subnet.elasticache",
            "module.vpc.module.vpc.aws_subnet.intra",
            "module.vpc.module.vpc.aws_subnet.outpost",
            "module.vpc.module.vpc.aws_subnet.private",
            "module.vpc.module.vpc.aws_subnet.public",
            "module.vpc.module.vpc.aws_subnet.redshift",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_dhcp_options.this",
            "module.vpc.module.vpc.aws_vpc_dhcp_options_association.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.vpc.module.vpc.aws_vpn_gateway.this",
            "module.vpc.module.vpc.aws_vpn_gateway_attachment.this",
            "module.vpc.module.vpc.aws_vpn_gateway_route_propagation.intra",
            "module.vpc.module.vpc.aws_vpn_gateway_route_propagation.private",
            "module.vpc.module.vpc.aws_vpn_gateway_route_propagation.public",
            "module.vpc.module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
            "module.vpc.module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
          ]
        }
      ]
    },
    {
      "module": "module.eks-cluster",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "eks_master_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::339712838104:role/eks-master-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"eks.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-23T07:27:55Z",
            "description": "",
            "force_detach_policies": false,
            "id": "eks-master-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
              "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController"
            ],
            "max_session_duration": 3600,
            "name": "eks-master-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAU6GDWRHMLHS66PEJJ"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.eks-cluster",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "eks_nodegroup_role",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::339712838104:role/eks-nodegroup-role",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRole\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-23T07:27:55Z",
            "description": "",
            "force_detach_policies": false,
            "id": "eks-nodegroup-role",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
              "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy"
            ],
            "max_session_duration": 3600,
            "name": "eks-nodegroup-role",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAU6GDWRHMIG43IQJP4"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.eks-cluster",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEC2ContainerRegistryReadOnly",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-nodegroup-role-20241123072756834200000001",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
            "role": "eks-nodegroup-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-cluster.aws_iam_role.eks_nodegroup_role"
          ]
        }
      ]
    },
    {
      "module": "module.eks-cluster",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEKSClusterPolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-master-role-20241123072757310900000004",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSClusterPolicy",
            "role": "eks-master-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-cluster.aws_iam_role.eks_master_role"
          ]
        }
      ]
    },
    {
      "module": "module.eks-cluster",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEKSVPCResourceController",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-master-role-20241123072757486000000005",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSVPCResourceController",
            "role": "eks-master-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-cluster.aws_iam_role.eks_master_role"
          ]
        }
      ]
    },
    {
      "module": "module.eks-cluster",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEKSWorkerNodePolicy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-nodegroup-role-20241123072757171500000003",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy",
            "role": "eks-nodegroup-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-cluster.aws_iam_role.eks_nodegroup_role"
          ]
        }
      ]
    },
    {
      "module": "module.eks-cluster",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "eks-AmazonEKS_CNI_Policy",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eks-nodegroup-role-20241123072756972800000002",
            "policy_arn": "arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy",
            "role": "eks-nodegroup-role"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-cluster.aws_iam_role.eks_nodegroup_role"
          ]
        }
      ]
    },
    {
      "module": "module.eks-ingress",
      "mode": "data",
      "type": "aws_route53_zone",
      "name": "mydomain",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:route53:::hostedzone/Z0494601357FJVQQN655P",
            "caller_reference": "RISWorkflow-RD:15e2b519-c2bb-454c-b64a-aac11283bcd8",
            "comment": "HostedZone created by Route53 Registrar",
            "id": "Z0494601357FJVQQN655P",
            "linked_service_description": null,
            "linked_service_principal": null,
            "name": "langocanh.net",
            "name_servers": [
              "ns-1495.awsdns-58.org",
              "ns-395.awsdns-49.com",
              "ns-804.awsdns-36.net",
              "ns-1631.awsdns-11.co.uk"
            ],
            "primary_name_server": "ns-1495.awsdns-58.org",
            "private_zone": false,
            "resource_record_set_count": 4,
            "tags": {},
            "vpc_id": null,
            "zone_id": "Z0494601357FJVQQN655P"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-ingress",
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "eks",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "../infrastructure/terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "eks-cluster": {
                  "cluster_arn": "arn:aws:eks:us-east-1:339712838104:cluster/ekscluster",
                  "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZnE0cFdJSDdNOU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1qTXdOekk0TWpkYUZ3MHpOREV4TWpFd056TXpNamRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURVYkdQQURQKzZXVTlvZ3ViRSs4RVNuV2lRUnlIaHFGWHg3YkFtY1RaSjJ4S1JuVllFQzRnZXBHZkEKZUxkTVRPN3IyRThNTHVkQ21vQzlqVHhndjdTTnQyK3c0Q0JYTzFWMVhlY3c2ak5oOXZMNFB3bDlJcC9mdFZLTAo1azliR2RpYmFyc0NYam5Ybkp0S3BzZWxZN2JzdzgrY0VHWU5Qem1IM2o0Z1BBSC81VVpnQXFGTG41YkJqdUlrCkErMTZlK2dkTjBFeER2OWtGdnRROG92YnRXa2NNZWlGYlZqZ3BNYm5QNmd5TzlrMzc4OS9vMWxKMHUxSTQwVmsKakNudlNhYjAvYTNvS3pIWllDZHY0OHhNVUVlNkpSZDZBYklTdkhaalZkU293WUhnZ0lKWWlUTFY1Yzc3bVpOcQp4MGxxcHMzdzUvQlhRM2xETEJSZ2pJTnI5Ry9KQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWkY3cGhZbWlLNjQ3eTNneFRnb2IwTVoxUFNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVvOFFLRlhZYgpSUXFndGRSdTRoMHhZdk96Q245VWtzcC9aTWRhbnp4VjhWeVJFSW9JMEJ6MjVDL3BpZlFtZU9mcFh0Zjhjb3ByCnY2dUlsYXpSZEhLamlRUEVqL3doQ1VPQXlXZUxYMTlMQmdUSDJuaFlvOW44dzFSZTEycCtXNDRpc1hUdWV0eksKL0sydytlSW50UkZ4U2lPVXUxWlhSK3dzdDl2a1lYWW5PMjNyK1R4aWRsMnVYb05FWjIwQ2gxd08yeVBsRld1eQpPMDVqS2FvTFBqUFdDL0lSYjhOZmVpdTlLYjIxTzRXaFZkaWpTeDQ3L0RoSmE2cVlSeG9KbUlUK1BOMEdrZlFQCmlVYmd1MTJFUzVwdlFOR0hlenlDZ3dBZEN2dnJlcFZObWFjK2xKeHplcGFkK2M4YzFjdUtnU1lPRzAxanpWdWEKVkszSDRBQXcydHNPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "cluster_endpoint": "https://649E59EF10663E5640E6B10C6085A2E0.gr7.us-east-1.eks.amazonaws.com",
                  "cluster_iam_role_arn": "arn:aws:iam::339712838104:role/eks-master-role",
                  "cluster_iam_role_name": "eks-master-role",
                  "cluster_id": "ekscluster",
                  "cluster_oidc_issuer_url": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
                  "cluster_primary_security_group_id": "sg-0bb8c08f481ef2c67",
                  "cluster_version": "1.31",
                  "identity": [
                    {
                      "oidc": [
                        {
                          "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                        }
                      ]
                    }
                  ],
                  "node_group_public_arn": "arn:aws:eks:us-east-1:339712838104:nodegroup/ekscluster/eks-ng-public/3ac9abfa-1b54-86c5-fb61-92467486ca4c",
                  "node_group_public_id": "ekscluster:eks-ng-public",
                  "node_group_public_status": "ACTIVE",
                  "node_group_public_version": "1.31"
                },
                "eks-oidc": {
                  "aws_iam_openid_connect_provider_arn": "arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
                  "aws_iam_openid_connect_provider_extract_from_arn": "oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                },
                "vpc": {
                  "azs": [
                    "us-east-1a",
                    "us-east-1b"
                  ],
                  "cidr_blocks": "10.0.0.0/16",
                  "database_subnets": [
                    "subnet-09ec127f68b6d6f77",
                    "subnet-094a1daaf674e437d"
                  ],
                  "private_subnets": [
                    "subnet-0bd92c39c351103e0",
                    "subnet-07baebba8fa24261f"
                  ],
                  "public_subnets": [
                    "subnet-048969fd7775ea556",
                    "subnet-05dc556ad99896454"
                  ],
                  "region": "us-east-1",
                  "vpc_id": "vpc-04995685231f22c83"
                }
              },
              "type": [
                "object",
                {
                  "eks-cluster": [
                    "object",
                    {
                      "cluster_arn": "string",
                      "cluster_certificate_authority_data": "string",
                      "cluster_endpoint": "string",
                      "cluster_iam_role_arn": "string",
                      "cluster_iam_role_name": "string",
                      "cluster_id": "string",
                      "cluster_oidc_issuer_url": "string",
                      "cluster_primary_security_group_id": "string",
                      "cluster_version": "string",
                      "identity": [
                        "list",
                        [
                          "object",
                          {
                            "oidc": [
                              "list",
                              [
                                "object",
                                {
                                  "issuer": "string"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "node_group_public_arn": "string",
                      "node_group_public_id": "string",
                      "node_group_public_status": "string",
                      "node_group_public_version": "string"
                    }
                  ],
                  "eks-oidc": [
                    "object",
                    {
                      "aws_iam_openid_connect_provider_arn": "string",
                      "aws_iam_openid_connect_provider_extract_from_arn": "string"
                    }
                  ],
                  "vpc": [
                    "object",
                    {
                      "azs": [
                        "list",
                        "string"
                      ],
                      "cidr_blocks": "string",
                      "database_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "private_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "public_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "region": "string",
                      "vpc_id": "string"
                    }
                  ]
                }
              ]
            },
            "workspace": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-ingress",
      "mode": "managed",
      "type": "aws_acm_certificate",
      "name": "acm_cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:acm:us-east-1:339712838104:certificate/1225a474-ea26-4638-a57f-f474310b275d",
            "certificate_authority_arn": "",
            "certificate_body": null,
            "certificate_chain": null,
            "domain_name": "*.langocanh.net",
            "domain_validation_options": [
              {
                "domain_name": "*.langocanh.net",
                "resource_record_name": "_e583a6bab22a8d203f143aaaf88f198e.langocanh.net.",
                "resource_record_type": "CNAME",
                "resource_record_value": "_f6b24e57f90807977b3fe21b85005da8.mhbtsbpdnt.acm-validations.aws."
              }
            ],
            "early_renewal_duration": "",
            "id": "arn:aws:acm:us-east-1:339712838104:certificate/1225a474-ea26-4638-a57f-f474310b275d",
            "key_algorithm": "RSA_2048",
            "not_after": "2025-12-22T23:59:59Z",
            "not_before": "2024-11-23T00:00:00Z",
            "options": [
              {
                "certificate_transparency_logging_preference": "ENABLED"
              }
            ],
            "pending_renewal": false,
            "private_key": null,
            "renewal_eligibility": "ELIGIBLE",
            "renewal_summary": [],
            "status": "ISSUED",
            "subject_alternative_names": [
              "*.langocanh.net"
            ],
            "tags": {
              "Environment": "test"
            },
            "tags_all": {
              "Environment": "test"
            },
            "type": "AMAZON_ISSUED",
            "validation_emails": [],
            "validation_method": "DNS",
            "validation_option": []
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key"
              }
            ]
          ],
          "private": "bnVsbA==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.eks-ingress",
      "mode": "managed",
      "type": "helm_release",
      "name": "aws_load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "aws-load-balancer-controller",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "aws-load-balancer-controller",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v2.4.3",
                "chart": "aws-load-balancer-controller",
                "first_deployed": 1732364117,
                "last_deployed": 1732364117,
                "name": "aws-load-balancer-controller",
                "namespace": "kube-system",
                "notes": "AWS Load Balancer controller installed!\n",
                "revision": 1,
                "values": "{\"clusterName\":\"ekscluster\",\"replicaCount\":1,\"serviceAccount\":{\"annotations\":{\"eks.amazonaws.com/role-arn\":\"arn:aws:iam::339712838104:role/aws-load-balancer-controller\"},\"name\":\"aws-load-balancer-controller\"}}",
                "version": "1.4.4"
              }
            ],
            "name": "aws-load-balancer-controller",
            "namespace": "kube-system",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://aws.github.io/eks-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "clusterName",
                "type": "",
                "value": "ekscluster"
              },
              {
                "name": "replicaCount",
                "type": "",
                "value": "1"
              },
              {
                "name": "serviceAccount.annotations.eks\\.amazonaws\\.com/role-arn",
                "type": "",
                "value": "arn:aws:iam::339712838104:role/aws-load-balancer-controller"
              },
              {
                "name": "serviceAccount.name",
                "type": "",
                "value": "aws-load-balancer-controller"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": null,
            "verify": false,
            "version": "1.4.4",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.terraform_remote_state.eks",
            "module.eks-ingress.data.terraform_remote_state.eks",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.aws_iam_role.this",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_caller_identity.current",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.this",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks-ingress.module.aws_load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_caller_identity",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "339712838104",
            "arn": "arn:aws:iam::339712838104:user/sidekid",
            "id": "339712838104",
            "user_id": "AIDAU6GDWRHMHQZGSTKFY"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-ingress.module.aws_load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "3014472196",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"iam:CreateServiceLinkedRole\",\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"iam:AWSServiceName\": \"elasticloadbalancing.amazonaws.com\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DescribeTargetHealth\",\n        \"elasticloadbalancing:DescribeTargetGroups\",\n        \"elasticloadbalancing:DescribeTargetGroupAttributes\",\n        \"elasticloadbalancing:DescribeTags\",\n        \"elasticloadbalancing:DescribeSSLPolicies\",\n        \"elasticloadbalancing:DescribeRules\",\n        \"elasticloadbalancing:DescribeLoadBalancers\",\n        \"elasticloadbalancing:DescribeLoadBalancerAttributes\",\n        \"elasticloadbalancing:DescribeListeners\",\n        \"elasticloadbalancing:DescribeListenerCertificates\",\n        \"ec2:GetCoipPoolUsage\",\n        \"ec2:DescribeVpcs\",\n        \"ec2:DescribeVpcPeeringConnections\",\n        \"ec2:DescribeTags\",\n        \"ec2:DescribeSubnets\",\n        \"ec2:DescribeSecurityGroups\",\n        \"ec2:DescribeNetworkInterfaces\",\n        \"ec2:DescribeInternetGateways\",\n        \"ec2:DescribeInstances\",\n        \"ec2:DescribeCoipPools\",\n        \"ec2:DescribeAvailabilityZones\",\n        \"ec2:DescribeAddresses\",\n        \"ec2:DescribeAccountAttributes\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"wafv2:GetWebACLForResource\",\n        \"wafv2:GetWebACL\",\n        \"wafv2:DisassociateWebACL\",\n        \"wafv2:AssociateWebACL\",\n        \"waf-regional:GetWebACLForResource\",\n        \"waf-regional:GetWebACL\",\n        \"waf-regional:DisassociateWebACL\",\n        \"waf-regional:AssociateWebACL\",\n        \"shield:GetSubscriptionState\",\n        \"shield:DescribeProtection\",\n        \"shield:DeleteProtection\",\n        \"shield:CreateProtection\",\n        \"iam:ListServerCertificates\",\n        \"iam:GetServerCertificate\",\n        \"cognito-idp:DescribeUserPoolClient\",\n        \"acm:ListCertificates\",\n        \"acm:DescribeCertificate\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:CreateSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"ec2:CreateTags\",\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"ec2:CreateAction\": \"CreateSecurityGroup\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:DeleteTags\",\n        \"ec2:CreateTags\"\n      ],\n      \"Resource\": \"arn:aws:ec2:*:*:security-group/*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"ec2:RevokeSecurityGroupIngress\",\n        \"ec2:DeleteSecurityGroup\",\n        \"ec2:AuthorizeSecurityGroupIngress\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:CreateTargetGroup\",\n        \"elasticloadbalancing:CreateLoadBalancer\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:DeleteRule\",\n        \"elasticloadbalancing:DeleteListener\",\n        \"elasticloadbalancing:CreateRule\",\n        \"elasticloadbalancing:CreateListener\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": \"*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"true\",\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RemoveTags\",\n        \"elasticloadbalancing:AddTags\"\n      ],\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"\n      ]\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetSubnets\",\n        \"elasticloadbalancing:SetSecurityGroups\",\n        \"elasticloadbalancing:SetIpAddressType\",\n        \"elasticloadbalancing:ModifyTargetGroupAttributes\",\n        \"elasticloadbalancing:ModifyTargetGroup\",\n        \"elasticloadbalancing:ModifyLoadBalancerAttributes\",\n        \"elasticloadbalancing:DeleteTargetGroup\",\n        \"elasticloadbalancing:DeleteLoadBalancer\"\n      ],\n      \"Resource\": \"*\",\n      \"Condition\": {\n        \"Null\": {\n          \"aws:ResourceTag/elbv2.k8s.aws/cluster\": \"false\"\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"elasticloadbalancing:AddTags\",\n      \"Resource\": [\n        \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\n        \"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"\n      ],\n      \"Condition\": {\n        \"Null\": {\n          \"aws:RequestTag/elbv2.k8s.aws/cluster\": \"false\"\n        },\n        \"StringEquals\": {\n          \"elasticloadbalancing:CreateAction\": [\n            \"CreateTargetGroup\",\n            \"CreateLoadBalancer\"\n          ]\n        }\n      }\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:RegisterTargets\",\n        \"elasticloadbalancing:DeregisterTargets\"\n      ],\n      \"Resource\": \"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"\n    },\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": [\n        \"elasticloadbalancing:SetWebAcl\",\n        \"elasticloadbalancing:RemoveListenerCertificates\",\n        \"elasticloadbalancing:ModifyRule\",\n        \"elasticloadbalancing:ModifyListener\",\n        \"elasticloadbalancing:AddListenerCertificates\"\n      ],\n      \"Resource\": \"*\"\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"iam:CreateServiceLinkedRole\",\"Resource\":\"*\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:CreateSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":\"ec2:CreateTags\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}}},{\"Effect\":\"Allow\",\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Resource\":\"arn:aws:ec2:*:*:security-group/*\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Resource\":\"*\",\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:AddTags\"],\"Resource\":\"*\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\",\"elasticloadbalancing:AddTags\"],\"Resource\":\"*\"},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Resource\":\"*\",\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}}},{\"Effect\":\"Allow\",\"Action\":\"elasticloadbalancing:AddTags\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"elasticloadbalancing:CreateAction\":[\"CreateTargetGroup\",\"CreateLoadBalancer\"]}}},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Effect\":\"Allow\",\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Resource\":\"*\"}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "iam:CreateServiceLinkedRole"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "elasticloadbalancing.amazonaws.com"
                    ],
                    "variable": "iam:AWSServiceName"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:DescribeAccountAttributes",
                  "ec2:DescribeAddresses",
                  "ec2:DescribeAvailabilityZones",
                  "ec2:DescribeCoipPools",
                  "ec2:DescribeInstances",
                  "ec2:DescribeInternetGateways",
                  "ec2:DescribeNetworkInterfaces",
                  "ec2:DescribeSecurityGroups",
                  "ec2:DescribeSubnets",
                  "ec2:DescribeTags",
                  "ec2:DescribeVpcPeeringConnections",
                  "ec2:DescribeVpcs",
                  "ec2:GetCoipPoolUsage",
                  "elasticloadbalancing:DescribeListenerCertificates",
                  "elasticloadbalancing:DescribeListeners",
                  "elasticloadbalancing:DescribeLoadBalancerAttributes",
                  "elasticloadbalancing:DescribeLoadBalancers",
                  "elasticloadbalancing:DescribeRules",
                  "elasticloadbalancing:DescribeSSLPolicies",
                  "elasticloadbalancing:DescribeTags",
                  "elasticloadbalancing:DescribeTargetGroupAttributes",
                  "elasticloadbalancing:DescribeTargetGroups",
                  "elasticloadbalancing:DescribeTargetHealth"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "acm:DescribeCertificate",
                  "acm:ListCertificates",
                  "cognito-idp:DescribeUserPoolClient",
                  "iam:GetServerCertificate",
                  "iam:ListServerCertificates",
                  "shield:CreateProtection",
                  "shield:DeleteProtection",
                  "shield:DescribeProtection",
                  "shield:GetSubscriptionState",
                  "waf-regional:AssociateWebACL",
                  "waf-regional:DisassociateWebACL",
                  "waf-regional:GetWebACL",
                  "waf-regional:GetWebACLForResource",
                  "wafv2:AssociateWebACL",
                  "wafv2:DisassociateWebACL",
                  "wafv2:GetWebACL",
                  "wafv2:GetWebACLForResource"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:CreateSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateSecurityGroup"
                    ],
                    "variable": "ec2:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:CreateTags",
                  "ec2:DeleteTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:ec2:*:*:security-group/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "ec2:AuthorizeSecurityGroupIngress",
                  "ec2:DeleteSecurityGroup",
                  "ec2:RevokeSecurityGroupIngress"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:CreateLoadBalancer",
                  "elasticloadbalancing:CreateTargetGroup"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:CreateListener",
                  "elasticloadbalancing:CreateRule",
                  "elasticloadbalancing:DeleteListener",
                  "elasticloadbalancing:DeleteRule"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "Null",
                    "values": [
                      "true"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags",
                  "elasticloadbalancing:RemoveTags"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*",
                  "arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeleteLoadBalancer",
                  "elasticloadbalancing:DeleteTargetGroup",
                  "elasticloadbalancing:ModifyLoadBalancerAttributes",
                  "elasticloadbalancing:ModifyTargetGroup",
                  "elasticloadbalancing:ModifyTargetGroupAttributes",
                  "elasticloadbalancing:SetIpAddressType",
                  "elasticloadbalancing:SetSecurityGroups",
                  "elasticloadbalancing:SetSubnets"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:ResourceTag/elbv2.k8s.aws/cluster"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddTags"
                ],
                "condition": [
                  {
                    "test": "Null",
                    "values": [
                      "false"
                    ],
                    "variable": "aws:RequestTag/elbv2.k8s.aws/cluster"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "CreateTargetGroup",
                      "CreateLoadBalancer"
                    ],
                    "variable": "elasticloadbalancing:CreateAction"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*",
                  "arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*",
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:DeregisterTargets",
                  "elasticloadbalancing:RegisterTargets"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "arn:aws:elasticloadbalancing:*:*:targetgroup/*/*"
                ],
                "sid": ""
              },
              {
                "actions": [
                  "elasticloadbalancing:AddListenerCertificates",
                  "elasticloadbalancing:ModifyListener",
                  "elasticloadbalancing:ModifyRule",
                  "elasticloadbalancing:RemoveListenerCertificates",
                  "elasticloadbalancing:SetWebAcl"
                ],
                "condition": [],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [],
                "resources": [
                  "*"
                ],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-ingress.module.aws_load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_iam_policy_document",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "1467462799",
            "json": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0\"\n      },\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0:aud\": \"sts.amazonaws.com\",\n          \"oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0:sub\": \"system:serviceaccount:kube-system:aws-load-balancer-controller\"\n        }\n      }\n    }\n  ]\n}",
            "minified_json": "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Principal\":{\"Federated\":\"arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0\"},\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0:aud\":\"sts.amazonaws.com\",\"oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}}}]}",
            "override_json": null,
            "override_policy_documents": null,
            "policy_id": null,
            "source_json": null,
            "source_policy_documents": null,
            "statement": [
              {
                "actions": [
                  "sts:AssumeRoleWithWebIdentity"
                ],
                "condition": [
                  {
                    "test": "StringEquals",
                    "values": [
                      "sts.amazonaws.com"
                    ],
                    "variable": "oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0:aud"
                  },
                  {
                    "test": "StringEquals",
                    "values": [
                      "system:serviceaccount:kube-system:aws-load-balancer-controller"
                    ],
                    "variable": "oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0:sub"
                  }
                ],
                "effect": "Allow",
                "not_actions": [],
                "not_principals": [],
                "not_resources": [],
                "principals": [
                  {
                    "identifiers": [
                      "arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                    ],
                    "type": "Federated"
                  }
                ],
                "resources": [],
                "sid": ""
              }
            ],
            "version": "2012-10-17"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-ingress.module.aws_load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-ingress.module.aws_load_balancer_controller_irsa_role",
      "mode": "data",
      "type": "aws_region",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "description": "US East (N. Virginia)",
            "endpoint": "ec2.us-east-1.amazonaws.com",
            "id": "us-east-1",
            "name": "us-east-1"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-ingress.module.aws_load_balancer_controller_irsa_role",
      "mode": "managed",
      "type": "aws_iam_policy",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::339712838104:policy/AmazonEKS_AWS_Load_Balancer_Controller-20241123120728818400000001",
            "attachment_count": 1,
            "description": "Provides permissions for AWS Load Balancer Controller addon",
            "id": "arn:aws:iam::339712838104:policy/AmazonEKS_AWS_Load_Balancer_Controller-20241123120728818400000001",
            "name": "AmazonEKS_AWS_Load_Balancer_Controller-20241123120728818400000001",
            "name_prefix": "AmazonEKS_AWS_Load_Balancer_Controller-",
            "path": "/",
            "policy": "{\"Statement\":[{\"Action\":\"iam:CreateServiceLinkedRole\",\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"elasticloadbalancing.amazonaws.com\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DescribeTargetHealth\",\"elasticloadbalancing:DescribeTargetGroups\",\"elasticloadbalancing:DescribeTargetGroupAttributes\",\"elasticloadbalancing:DescribeTags\",\"elasticloadbalancing:DescribeSSLPolicies\",\"elasticloadbalancing:DescribeRules\",\"elasticloadbalancing:DescribeLoadBalancers\",\"elasticloadbalancing:DescribeLoadBalancerAttributes\",\"elasticloadbalancing:DescribeListeners\",\"elasticloadbalancing:DescribeListenerCertificates\",\"ec2:GetCoipPoolUsage\",\"ec2:DescribeVpcs\",\"ec2:DescribeVpcPeeringConnections\",\"ec2:DescribeTags\",\"ec2:DescribeSubnets\",\"ec2:DescribeSecurityGroups\",\"ec2:DescribeNetworkInterfaces\",\"ec2:DescribeInternetGateways\",\"ec2:DescribeInstances\",\"ec2:DescribeCoipPools\",\"ec2:DescribeAvailabilityZones\",\"ec2:DescribeAddresses\",\"ec2:DescribeAccountAttributes\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"wafv2:GetWebACLForResource\",\"wafv2:GetWebACL\",\"wafv2:DisassociateWebACL\",\"wafv2:AssociateWebACL\",\"waf-regional:GetWebACLForResource\",\"waf-regional:GetWebACL\",\"waf-regional:DisassociateWebACL\",\"waf-regional:AssociateWebACL\",\"shield:GetSubscriptionState\",\"shield:DescribeProtection\",\"shield:DeleteProtection\",\"shield:CreateProtection\",\"iam:ListServerCertificates\",\"iam:GetServerCertificate\",\"cognito-idp:DescribeUserPoolClient\",\"acm:ListCertificates\",\"acm:DescribeCertificate\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:CreateSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"ec2:CreateTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"ec2:CreateAction\":\"CreateSecurityGroup\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:DeleteTags\",\"ec2:CreateTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"arn:aws:ec2:*:*:security-group/*\"},{\"Action\":[\"ec2:RevokeSecurityGroupIngress\",\"ec2:DeleteSecurityGroup\",\"ec2:AuthorizeSecurityGroupIngress\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:CreateTargetGroup\",\"elasticloadbalancing:CreateLoadBalancer\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:DeleteRule\",\"elasticloadbalancing:DeleteListener\",\"elasticloadbalancing:CreateRule\",\"elasticloadbalancing:CreateListener\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"true\",\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RemoveTags\",\"elasticloadbalancing:AddTags\"],\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:listener/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener/app/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/net/*/*/*\",\"arn:aws:elasticloadbalancing:*:*:listener-rule/app/*/*/*\"]},{\"Action\":[\"elasticloadbalancing:SetSubnets\",\"elasticloadbalancing:SetSecurityGroups\",\"elasticloadbalancing:SetIpAddressType\",\"elasticloadbalancing:ModifyTargetGroupAttributes\",\"elasticloadbalancing:ModifyTargetGroup\",\"elasticloadbalancing:ModifyLoadBalancerAttributes\",\"elasticloadbalancing:DeleteTargetGroup\",\"elasticloadbalancing:DeleteLoadBalancer\"],\"Condition\":{\"Null\":{\"aws:ResourceTag/elbv2.k8s.aws/cluster\":\"false\"}},\"Effect\":\"Allow\",\"Resource\":\"*\"},{\"Action\":\"elasticloadbalancing:AddTags\",\"Condition\":{\"Null\":{\"aws:RequestTag/elbv2.k8s.aws/cluster\":\"false\"},\"StringEquals\":{\"elasticloadbalancing:CreateAction\":[\"CreateTargetGroup\",\"CreateLoadBalancer\"]}},\"Effect\":\"Allow\",\"Resource\":[\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/net/*/*\",\"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/*/*\"]},{\"Action\":[\"elasticloadbalancing:RegisterTargets\",\"elasticloadbalancing:DeregisterTargets\"],\"Effect\":\"Allow\",\"Resource\":\"arn:aws:elasticloadbalancing:*:*:targetgroup/*/*\"},{\"Action\":[\"elasticloadbalancing:SetWebAcl\",\"elasticloadbalancing:RemoveListenerCertificates\",\"elasticloadbalancing:ModifyRule\",\"elasticloadbalancing:ModifyListener\",\"elasticloadbalancing:AddListenerCertificates\"],\"Effect\":\"Allow\",\"Resource\":\"*\"}],\"Version\":\"2012-10-17\"}",
            "policy_id": "ANPAU6GDWRHMPAFOOOWYO",
            "tags": {},
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks-ingress.module.aws_load_balancer_controller_irsa_role",
      "mode": "managed",
      "type": "aws_iam_role",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::339712838104:role/aws-load-balancer-controller",
            "assume_role_policy": "{\"Statement\":[{\"Action\":\"sts:AssumeRoleWithWebIdentity\",\"Condition\":{\"StringEquals\":{\"oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0:aud\":\"sts.amazonaws.com\",\"oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0:sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}},\"Effect\":\"Allow\",\"Principal\":{\"Federated\":\"arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0\"}}],\"Version\":\"2012-10-17\"}",
            "create_date": "2024-11-23T12:07:30Z",
            "description": "",
            "force_detach_policies": true,
            "id": "aws-load-balancer-controller",
            "inline_policy": [],
            "managed_policy_arns": [
              "arn:aws:iam::339712838104:policy/AmazonEKS_AWS_Load_Balancer_Controller-20241123120728818400000001"
            ],
            "max_session_duration": 3600,
            "name": "aws-load-balancer-controller",
            "name_prefix": "",
            "path": "/",
            "permissions_boundary": "",
            "tags": {},
            "tags_all": {},
            "unique_id": "AROAU6GDWRHMCN3KJG6PS"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-ingress.data.terraform_remote_state.eks",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_caller_identity.current",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.this",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks-ingress.module.aws_load_balancer_controller_irsa_role",
      "mode": "managed",
      "type": "aws_iam_role_policy_attachment",
      "name": "load_balancer_controller",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "id": "aws-load-balancer-controller-20241123120731367200000002",
            "policy_arn": "arn:aws:iam::339712838104:policy/AmazonEKS_AWS_Load_Balancer_Controller-20241123120728818400000001",
            "role": "aws-load-balancer-controller"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-ingress.data.terraform_remote_state.eks",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.aws_iam_policy.load_balancer_controller",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.aws_iam_role.this",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_caller_identity.current",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.load_balancer_controller",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_iam_policy_document.this",
            "module.eks-ingress.module.aws_load_balancer_controller_irsa_role.data.aws_partition.current"
          ]
        }
      ]
    },
    {
      "module": "module.eks-monitoring",
      "mode": "managed",
      "type": "helm_release",
      "name": "prometheus",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "kube-prometheus-stack",
            "cleanup_on_fail": false,
            "create_namespace": true,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "prometheus",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v0.68.0",
                "chart": "kube-prometheus-stack",
                "first_deployed": 1732366148,
                "last_deployed": 1732366148,
                "name": "prometheus",
                "namespace": "prometheus",
                "notes": "kube-prometheus-stack has been installed. Check its status by running:\n  kubectl --namespace prometheus get pods -l \"release=prometheus\"\n\nVisit https://github.com/prometheus-operator/kube-prometheus for instructions on how to create \u0026 configure Alertmanager and Prometheus instances using the Operator.\n\n1. Get the application URL by running these commands:\n  export POD_NAME=$(kubectl get pods --namespace prometheus -l \"app.kubernetes.io/name=prometheus-node-exporter,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n  echo \"Visit http://127.0.0.1:9100 to use your application\"\n  kubectl port-forward --namespace prometheus $POD_NAME 9100\n1. Get your 'admin' user password by running:\n\n   kubectl get secret --namespace prometheus prometheus-grafana -o jsonpath=\"{.data.admin-password}\" | base64 --decode ; echo\n\n\n2. The Grafana server can be accessed via port 80 on the following DNS name from within your cluster:\n\n   prometheus-grafana.prometheus.svc.cluster.local\n\n   Get the Grafana URL to visit by running these commands in the same shell:\n     export POD_NAME=$(kubectl get pods --namespace prometheus -l \"app.kubernetes.io/name=grafana,app.kubernetes.io/instance=prometheus\" -o jsonpath=\"{.items[0].metadata.name}\")\n     kubectl --namespace prometheus port-forward $POD_NAME 3000\n\n3. Login with the password from step 1 and the username: admin\n#################################################################################\n######   WARNING: Persistence is disabled!!! You will lose your data when   #####\n######            the Grafana pod is terminated.                            #####\n#################################################################################\n\nkube-state-metrics is a simple service that listens to the Kubernetes API server and generates metrics about the state of the objects.\nThe exposed metrics can be found here:\nhttps://github.com/kubernetes/kube-state-metrics/blob/master/docs/README.md#exposed-metrics\n\nThe metrics are exported on the HTTP endpoint /metrics on the listening port.\nIn your case, prometheus-kube-state-metrics.prometheus.svc.cluster.local:8080/metrics\n\nThey are served either as plaintext or protobuf depending on the Accept header.\nThey are designed to be consumed either by Prometheus itself or by a scraper that is compatible with scraping a Prometheus client endpoint.\n",
                "revision": 1,
                "values": "{\"alertRelabelConfigs\":{},\"alertmanager\":{\"enabled\":true,\"persistence\":{\"size\":\"2Gi\"},\"podSecurityContext\":{\"fsGroup\":65534,\"runAsGroup\":65534,\"runAsNonRoot\":true,\"runAsUser\":65534}},\"configmapReload\":{\"prometheus\":{\"containerSecurityContext\":{},\"enabled\":true,\"extraArgs\":{},\"extraConfigmapMounts\":[],\"extraVolumeDirs\":[],\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"repository\":\"jimmidyson/configmap-reload\",\"tag\":\"v0.8.0\"},\"name\":\"configmap-reload\",\"resources\":{}}},\"extraManifests\":[],\"extraScrapeConfigs\":\"\",\"forceNamespace\":\"\",\"imagePullSecrets\":[],\"kube-state-metrics\":{\"enabled\":true},\"networkPolicy\":{\"enabled\":false},\"podSecurityPolicy\":{\"enabled\":true},\"prometheus-node-exporter\":{\"containerSecurityContext\":{\"allowPrivilegeEscalation\":false},\"enabled\":true,\"rbac\":{\"pspEnabled\":false}},\"prometheus-pushgateway\":{\"enabled\":true,\"serviceAnnotations\":{\"prometheus.io/probe\":\"pushgateway\"}},\"rbac\":{\"create\":true},\"ruleFiles\":{},\"server\":{\"affinity\":{},\"alertmanagers\":[],\"baseURL\":\"\",\"configMapOverrideName\":\"\",\"configPath\":\"/etc/config/prometheus.yml\",\"containerSecurityContext\":{},\"defaultFlagsOverride\":[],\"deploymentAnnotations\":{},\"dnsConfig\":{},\"dnsPolicy\":\"ClusterFirst\",\"emptyDir\":{\"sizeLimit\":\"\"},\"enableServiceLinks\":true,\"env\":[],\"extraArgs\":{},\"extraConfigmapLabels\":{},\"extraConfigmapMounts\":[],\"extraFlags\":[\"web.enable-lifecycle\"],\"extraHostPathMounts\":[],\"extraInitContainers\":[],\"extraSecretMounts\":[],\"extraVolumeMounts\":[],\"extraVolumes\":[],\"global\":{\"evaluation_interval\":\"1m\",\"scrape_interval\":\"1m\",\"scrape_timeout\":\"10s\"},\"hostAliases\":[],\"hostNetwork\":false,\"image\":{\"digest\":\"\",\"pullPolicy\":\"IfNotPresent\",\"repository\":\"quay.io/prometheus/prometheus\",\"tag\":\"\"},\"ingress\":{\"annotations\":{},\"enabled\":false,\"extraLabels\":{},\"extraPaths\":[],\"hosts\":[],\"path\":\"/\",\"pathType\":\"Prefix\",\"tls\":[]},\"livenessProbeFailureThreshold\":3,\"livenessProbeInitialDelay\":30,\"livenessProbePeriodSeconds\":15,\"livenessProbeSuccessThreshold\":1,\"livenessProbeTimeout\":10,\"name\":\"server\",\"nodeSelector\":{},\"persistentVolume\":{\"accessModes\":[\"ReadWriteOnce\"],\"annotations\":{},\"enabled\":false,\"existingClaim\":\"\",\"labels\":{},\"mountPath\":\"/data\",\"size\":\"8Gi\",\"subPath\":\"\"},\"podAnnotations\":{},\"podDisruptionBudget\":{\"enabled\":false,\"maxUnavailable\":1},\"podLabels\":{},\"podSecurityPolicy\":{\"annotations\":{}},\"prefixURL\":\"\",\"priorityClassName\":\"\",\"probeHeaders\":[],\"probeScheme\":\"HTTP\",\"readinessProbeFailureThreshold\":3,\"readinessProbeInitialDelay\":30,\"readinessProbePeriodSeconds\":5,\"readinessProbeSuccessThreshold\":1,\"readinessProbeTimeout\":4,\"remoteRead\":[],\"remoteWrite\":[],\"replicaCount\":1,\"resources\":{},\"retention\":\"15d\",\"securityContext\":{\"fsGroup\":65534,\"runAsGroup\":65534,\"runAsNonRoot\":true,\"runAsUser\":65534},\"service\":{\"annotations\":{},\"clusterIP\":\"\",\"enabled\":true,\"externalIPs\":[],\"gRPC\":{\"enabled\":false,\"servicePort\":10901},\"labels\":{},\"loadBalancerIP\":\"\",\"loadBalancerSourceRanges\":[],\"servicePort\":80,\"sessionAffinity\":\"None\",\"statefulsetReplica\":{\"enabled\":false,\"replica\":0},\"type\":\"ClusterIP\"},\"sidecarContainers\":{},\"sidecarTemplateValues\":{},\"startupProbe\":{\"enabled\":false,\"failureThreshold\":30,\"periodSeconds\":5,\"timeoutSeconds\":10},\"statefulSet\":{\"annotations\":{},\"enabled\":false,\"headless\":{\"annotations\":{},\"gRPC\":{\"enabled\":false,\"servicePort\":10901},\"labels\":{},\"servicePort\":80},\"labels\":{},\"podManagementPolicy\":\"OrderedReady\"},\"storagePath\":\"\",\"strategy\":{\"type\":\"Recreate\"},\"tcpSocketProbeEnabled\":false,\"terminationGracePeriodSeconds\":300,\"tolerations\":[],\"verticalAutoscaler\":{\"enabled\":false}},\"server.resources\":\"\\\"limits\\\":\\n  \\\"cpu\\\": \\\"200m\\\"\\n  \\\"memory\\\": \\\"50Mi\\\"\\n\\\"requests\\\":\\n  \\\"cpu\\\": \\\"100m\\\"\\n  \\\"memory\\\": \\\"30Mi\\\"\\n\",\"serverFiles\":{\"alerting_rules.yml\":{},\"alerts\":{},\"prometheus.yml\":{\"rule_files\":[\"/etc/config/recording_rules.yml\",\"/etc/config/alerting_rules.yml\",\"/etc/config/rules\",\"/etc/config/alerts\"],\"scrape_configs\":[{\"job_name\":\"prometheus\",\"static_configs\":[{\"targets\":[\"localhost:9090\"]}]},{\"bearer_token_file\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\",\"job_name\":\"kubernetes-apiservers\",\"kubernetes_sd_configs\":[{\"role\":\"endpoints\"}],\"relabel_configs\":[{\"action\":\"keep\",\"regex\":\"default;kubernetes;https\",\"source_labels\":[\"__meta_kubernetes_namespace\",\"__meta_kubernetes_service_name\",\"__meta_kubernetes_endpoint_port_name\"]}],\"scheme\":\"https\",\"tls_config\":{\"ca_file\":\"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\",\"insecure_skip_verify\":true}},{\"bearer_token_file\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\",\"job_name\":\"kubernetes-nodes\",\"kubernetes_sd_configs\":[{\"role\":\"node\"}],\"relabel_configs\":[{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_node_label_(.+)\"},{\"replacement\":\"kubernetes.default.svc:443\",\"target_label\":\"__address__\"},{\"regex\":\"(.+)\",\"replacement\":\"/api/v1/nodes/$1/proxy/metrics\",\"source_labels\":[\"__meta_kubernetes_node_name\"],\"target_label\":\"__metrics_path__\"}],\"scheme\":\"https\",\"tls_config\":{\"ca_file\":\"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\",\"insecure_skip_verify\":true}},{\"bearer_token_file\":\"/var/run/secrets/kubernetes.io/serviceaccount/token\",\"job_name\":\"kubernetes-nodes-cadvisor\",\"kubernetes_sd_configs\":[{\"role\":\"node\"}],\"relabel_configs\":[{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_node_label_(.+)\"},{\"replacement\":\"kubernetes.default.svc:443\",\"target_label\":\"__address__\"},{\"regex\":\"(.+)\",\"replacement\":\"/api/v1/nodes/$1/proxy/metrics/cadvisor\",\"source_labels\":[\"__meta_kubernetes_node_name\"],\"target_label\":\"__metrics_path__\"}],\"scheme\":\"https\",\"tls_config\":{\"ca_file\":\"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\",\"insecure_skip_verify\":true}},{\"honor_labels\":true,\"job_name\":\"kubernetes-service-endpoints\",\"kubernetes_sd_configs\":[{\"role\":\"endpoints\"}],\"relabel_configs\":[{\"action\":\"keep\",\"regex\":true,\"source_labels\":[\"__meta_kubernetes_service_annotation_prometheus_io_scrape\"]},{\"action\":\"drop\",\"regex\":true,\"source_labels\":[\"__meta_kubernetes_service_annotation_prometheus_io_scrape_slow\"]},{\"action\":\"replace\",\"regex\":\"(https?)\",\"source_labels\":[\"__meta_kubernetes_service_annotation_prometheus_io_scheme\"],\"target_label\":\"__scheme__\"},{\"action\":\"replace\",\"regex\":\"(.+)\",\"source_labels\":[\"__meta_kubernetes_service_annotation_prometheus_io_path\"],\"target_label\":\"__metrics_path__\"},{\"action\":\"replace\",\"regex\":\"(.+?)(?::\\\\d+)?;(\\\\d+)\",\"replacement\":\"$1:$2\",\"source_labels\":[\"__address__\",\"__meta_kubernetes_service_annotation_prometheus_io_port\"],\"target_label\":\"__address__\"},{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_service_annotation_prometheus_io_param_(.+)\",\"replacement\":\"__param_$1\"},{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_service_label_(.+)\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_namespace\"],\"target_label\":\"namespace\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_service_name\"],\"target_label\":\"service\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_pod_node_name\"],\"target_label\":\"node\"}]},{\"honor_labels\":true,\"job_name\":\"kubernetes-service-endpoints-slow\",\"kubernetes_sd_configs\":[{\"role\":\"endpoints\"}],\"relabel_configs\":[{\"action\":\"keep\",\"regex\":true,\"source_labels\":[\"__meta_kubernetes_service_annotation_prometheus_io_scrape_slow\"]},{\"action\":\"replace\",\"regex\":\"(https?)\",\"source_labels\":[\"__meta_kubernetes_service_annotation_prometheus_io_scheme\"],\"target_label\":\"__scheme__\"},{\"action\":\"replace\",\"regex\":\"(.+)\",\"source_labels\":[\"__meta_kubernetes_service_annotation_prometheus_io_path\"],\"target_label\":\"__metrics_path__\"},{\"action\":\"replace\",\"regex\":\"(.+?)(?::\\\\d+)?;(\\\\d+)\",\"replacement\":\"$1:$2\",\"source_labels\":[\"__address__\",\"__meta_kubernetes_service_annotation_prometheus_io_port\"],\"target_label\":\"__address__\"},{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_service_annotation_prometheus_io_param_(.+)\",\"replacement\":\"__param_$1\"},{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_service_label_(.+)\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_namespace\"],\"target_label\":\"namespace\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_service_name\"],\"target_label\":\"service\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_pod_node_name\"],\"target_label\":\"node\"}],\"scrape_interval\":\"5m\",\"scrape_timeout\":\"30s\"},{\"honor_labels\":true,\"job_name\":\"prometheus-pushgateway\",\"kubernetes_sd_configs\":[{\"role\":\"service\"}],\"relabel_configs\":[{\"action\":\"keep\",\"regex\":\"pushgateway\",\"source_labels\":[\"__meta_kubernetes_service_annotation_prometheus_io_probe\"]}]},{\"honor_labels\":true,\"job_name\":\"kubernetes-services\",\"kubernetes_sd_configs\":[{\"role\":\"service\"}],\"metrics_path\":\"/probe\",\"params\":{\"module\":[\"http_2xx\"]},\"relabel_configs\":[{\"action\":\"keep\",\"regex\":true,\"source_labels\":[\"__meta_kubernetes_service_annotation_prometheus_io_probe\"]},{\"source_labels\":[\"__address__\"],\"target_label\":\"__param_target\"},{\"replacement\":\"blackbox\",\"target_label\":\"__address__\"},{\"source_labels\":[\"__param_target\"],\"target_label\":\"instance\"},{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_service_label_(.+)\"},{\"source_labels\":[\"__meta_kubernetes_namespace\"],\"target_label\":\"namespace\"},{\"source_labels\":[\"__meta_kubernetes_service_name\"],\"target_label\":\"service\"}]},{\"honor_labels\":true,\"job_name\":\"kubernetes-pods\",\"kubernetes_sd_configs\":[{\"role\":\"pod\"}],\"relabel_configs\":[{\"action\":\"keep\",\"regex\":true,\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_scrape\"]},{\"action\":\"drop\",\"regex\":true,\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\"]},{\"action\":\"replace\",\"regex\":\"(https?)\",\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_scheme\"],\"target_label\":\"__scheme__\"},{\"action\":\"replace\",\"regex\":\"(.+)\",\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_path\"],\"target_label\":\"__metrics_path__\"},{\"action\":\"replace\",\"regex\":\"(\\\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\",\"replacement\":\"[$2]:$1\",\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_port\",\"__meta_kubernetes_pod_ip\"],\"target_label\":\"__address__\"},{\"action\":\"replace\",\"regex\":\"(\\\\d+);((([0-9]+?)(\\\\.|$)){4})\",\"replacement\":\"$2:$1\",\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_port\",\"__meta_kubernetes_pod_ip\"],\"target_label\":\"__address__\"},{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\",\"replacement\":\"__param_$1\"},{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_pod_label_(.+)\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_namespace\"],\"target_label\":\"namespace\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_pod_name\"],\"target_label\":\"pod\"},{\"action\":\"drop\",\"regex\":\"Pending|Succeeded|Failed|Completed\",\"source_labels\":[\"__meta_kubernetes_pod_phase\"]}]},{\"honor_labels\":true,\"job_name\":\"kubernetes-pods-slow\",\"kubernetes_sd_configs\":[{\"role\":\"pod\"}],\"relabel_configs\":[{\"action\":\"keep\",\"regex\":true,\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\"]},{\"action\":\"replace\",\"regex\":\"(https?)\",\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_scheme\"],\"target_label\":\"__scheme__\"},{\"action\":\"replace\",\"regex\":\"(.+)\",\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_path\"],\"target_label\":\"__metrics_path__\"},{\"action\":\"replace\",\"regex\":\"(\\\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\",\"replacement\":\"[$2]:$1\",\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_port\",\"__meta_kubernetes_pod_ip\"],\"target_label\":\"__address__\"},{\"action\":\"replace\",\"regex\":\"(\\\\d+);((([0-9]+?)(\\\\.|$)){4})\",\"replacement\":\"$2:$1\",\"source_labels\":[\"__meta_kubernetes_pod_annotation_prometheus_io_port\",\"__meta_kubernetes_pod_ip\"],\"target_label\":\"__address__\"},{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\",\"replacement\":\"__param_$1\"},{\"action\":\"labelmap\",\"regex\":\"__meta_kubernetes_pod_label_(.+)\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_namespace\"],\"target_label\":\"namespace\"},{\"action\":\"replace\",\"source_labels\":[\"__meta_kubernetes_pod_name\"],\"target_label\":\"pod\"},{\"action\":\"drop\",\"regex\":\"Pending|Succeeded|Failed|Completed\",\"source_labels\":[\"__meta_kubernetes_pod_phase\"]}],\"scrape_interval\":\"5m\",\"scrape_timeout\":\"30s\"}]},\"recording_rules.yml\":{},\"rules\":{}},\"serviceAccounts\":{\"server\":{\"annotations\":{},\"create\":true,\"name\":\"\"}}}",
                "version": "51.3.0"
              }
            ],
            "name": "prometheus",
            "namespace": "prometheus",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://prometheus-community.github.io/helm-charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [
              {
                "name": "podSecurityPolicy.enabled",
                "type": "",
                "value": "true"
              },
              {
                "name": "server.persistentVolume.enabled",
                "type": "",
                "value": "false"
              },
              {
                "name": "server\\.resources",
                "type": "",
                "value": "\"limits\":\n  \"cpu\": \"200m\"\n  \"memory\": \"50Mi\"\n\"requests\":\n  \"cpu\": \"100m\"\n  \"memory\": \"30Mi\"\n"
              }
            ],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 2000,
            "upgrade_install": null,
            "values": [
              "rbac:\r\n  create: true\r\n\r\npodSecurityPolicy:\r\n  enabled: false\r\n\r\nimagePullSecrets: []\r\n# - name: \"image-pull-secret\"\r\n\r\n## Define serviceAccount names for components. Defaults to component's fully qualified name.\r\n##\r\nserviceAccounts:\r\n  server:\r\n    create: true\r\n    name: \"\"\r\n    annotations: {}\r\n\r\n## Monitors ConfigMap changes and POSTs to a URL\r\n## Ref: https://github.com/jimmidyson/configmap-reload\r\n##\r\nconfigmapReload:\r\n  prometheus:\r\n    ## If false, the configmap-reload container will not be deployed\r\n    ##\r\n    enabled: true\r\n\r\n    ## configmap-reload container name\r\n    ##\r\n    name: configmap-reload\r\n\r\n    ## configmap-reload container image\r\n    ##\r\n    image:\r\n      repository: jimmidyson/configmap-reload\r\n      tag: v0.8.0\r\n      # When digest is set to a non-empty value, images will be pulled by digest (regardless of tag value).\r\n      digest: \"\"\r\n      pullPolicy: IfNotPresent\r\n\r\n    # containerPort: 9533\r\n\r\n    ## Additional configmap-reload container arguments\r\n    ##\r\n    extraArgs: {}\r\n    ## Additional configmap-reload volume directories\r\n    ##\r\n    extraVolumeDirs: []\r\n\r\n\r\n    ## Additional configmap-reload mounts\r\n    ##\r\n    extraConfigmapMounts: []\r\n      # - name: prometheus-alerts\r\n      #   mountPath: /etc/alerts.d\r\n      #   subPath: \"\"\r\n      #   configMap: prometheus-alerts\r\n      #   readOnly: true\r\n\r\n    ## Security context to be added to configmap-reload container\r\n    containerSecurityContext: {}\r\n\r\n    ## configmap-reload resource requests and limits\r\n    ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/\r\n    ##\r\n    resources: {}\r\n\r\nserver:\r\n  ## Prometheus server container name\r\n  ##\r\n  name: server\r\n\r\n  ## Use a ClusterRole (and ClusterRoleBinding)\r\n  ## - If set to false - we define a RoleBinding in the defined namespaces ONLY\r\n  ##\r\n  ## NB: because we need a Role with nonResourceURL's (\"/metrics\") - you must get someone with Cluster-admin privileges to define this role for you, before running with this setting enabled.\r\n  ##     This makes prometheus work - for users who do not have ClusterAdmin privs, but wants prometheus to operate on their own namespaces, instead of clusterwide.\r\n  ##\r\n  ## You MUST also set namespaces to the ones you have access to and want monitored by Prometheus.\r\n  ##\r\n  # useExistingClusterRoleName: nameofclusterrole\r\n\r\n  ## namespaces to monitor (instead of monitoring all - clusterwide). Needed if you want to run without Cluster-admin privileges.\r\n  # namespaces:\r\n  #   - yournamespace\r\n\r\n  # sidecarContainers - add more containers to prometheus server\r\n  # Key/Value where Key is the sidecar `- name: \u003cKey\u003e`\r\n  # Example:\r\n  #   sidecarContainers:\r\n  #      webserver:\r\n  #        image: nginx\r\n  sidecarContainers: {}\r\n\r\n  # sidecarTemplateValues - context to be used in template for sidecarContainers\r\n  # Example:\r\n  #   sidecarTemplateValues: *your-custom-globals\r\n  #   sidecarContainers:\r\n  #     webserver: |-\r\n  #       {{ include \"webserver-container-template\" . }}\r\n  # Template for `webserver-container-template` might looks like this:\r\n  #   image: \"{{ .Values.server.sidecarTemplateValues.repository }}:{{ .Values.server.sidecarTemplateValues.tag }}\"\r\n  #   ...\r\n  #\r\n  sidecarTemplateValues: {}\r\n\r\n  ## Prometheus server container image\r\n  ##\r\n  image:\r\n    repository: quay.io/prometheus/prometheus\r\n    # if not set appVersion field from Chart.yaml is used\r\n    tag: \"\"\r\n    # When digest is set to a non-empty value, images will be pulled by digest (regardless of tag value).\r\n    digest: \"\"\r\n    pullPolicy: IfNotPresent\r\n\r\n  ## prometheus server priorityClassName\r\n  ##\r\n  priorityClassName: \"\"\r\n\r\n  ## EnableServiceLinks indicates whether information about services should be injected\r\n  ## into pod's environment variables, matching the syntax of Docker links.\r\n  ## WARNING: the field is unsupported and will be skipped in K8s prior to v1.13.0.\r\n  ##\r\n  enableServiceLinks: true\r\n\r\n  ## The URL prefix at which the container can be accessed. Useful in the case the '-web.external-url' includes a slug\r\n  ## so that the various internal URLs are still able to access as they are in the default case.\r\n  ## (Optional)\r\n  prefixURL: \"\"\r\n\r\n  ## External URL which can access prometheus\r\n  ## Maybe same with Ingress host name\r\n  baseURL: \"\"\r\n\r\n  ## Additional server container environment variables\r\n  ##\r\n  ## You specify this manually like you would a raw deployment manifest.\r\n  ## This means you can bind in environment variables from secrets.\r\n  ##\r\n  ## e.g. static environment variable:\r\n  ##  - name: DEMO_GREETING\r\n  ##    value: \"Hello from the environment\"\r\n  ##\r\n  ## e.g. secret environment variable:\r\n  ## - name: USERNAME\r\n  ##   valueFrom:\r\n  ##     secretKeyRef:\r\n  ##       name: mysecret\r\n  ##       key: username\r\n  env: []\r\n\r\n  # List of flags to override default parameters, e.g:\r\n  # - --enable-feature=agent\r\n  # - --storage.agent.retention.max-time=30m\r\n  defaultFlagsOverride: []\r\n\r\n  extraFlags:\r\n    - web.enable-lifecycle\r\n    ## web.enable-admin-api flag controls access to the administrative HTTP API which includes functionality such as\r\n    ## deleting time series. This is disabled by default.\r\n    # - web.enable-admin-api\r\n    ##\r\n    ## storage.tsdb.no-lockfile flag controls BD locking\r\n    # - storage.tsdb.no-lockfile\r\n    ##\r\n    ## storage.tsdb.wal-compression flag enables compression of the write-ahead log (WAL)\r\n    # - storage.tsdb.wal-compression\r\n\r\n  ## Path to a configuration file on prometheus server container FS\r\n  configPath: /etc/config/prometheus.yml\r\n\r\n  ### The data directory used by prometheus to set --storage.tsdb.path\r\n  ### When empty server.persistentVolume.mountPath is used instead\r\n  storagePath: \"\"\r\n\r\n  global:\r\n    ## How frequently to scrape targets by default\r\n    ##\r\n    scrape_interval: 1m\r\n    ## How long until a scrape request times out\r\n    ##\r\n    scrape_timeout: 10s\r\n    ## How frequently to evaluate rules\r\n    ##\r\n    evaluation_interval: 1m\r\n  ## https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write\r\n  ##\r\n  remoteWrite: []\r\n  ## https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_read\r\n  ##\r\n  remoteRead: []\r\n\r\n  ## Custom HTTP headers for Liveness/Readiness/Startup Probe\r\n  ##\r\n  ## Useful for providing HTTP Basic Auth to healthchecks\r\n  probeHeaders: []\r\n    # - name: \"Authorization\"\r\n    #   value: \"Bearer ABCDEabcde12345\"\r\n\r\n  ## Additional Prometheus server container arguments\r\n  ##\r\n  extraArgs: {}\r\n\r\n  ## Additional InitContainers to initialize the pod\r\n  ##\r\n  extraInitContainers: []\r\n\r\n  ## Additional Prometheus server Volume mounts\r\n  ##\r\n  extraVolumeMounts: []\r\n\r\n  ## Additional Prometheus server Volumes\r\n  ##\r\n  extraVolumes: []\r\n\r\n  ## Additional Prometheus server hostPath mounts\r\n  ##\r\n  extraHostPathMounts: []\r\n    # - name: certs-dir\r\n    #   mountPath: /etc/kubernetes/certs\r\n    #   subPath: \"\"\r\n    #   hostPath: /etc/kubernetes/certs\r\n    #   readOnly: true\r\n\r\n  extraConfigmapMounts: []\r\n    # - name: certs-configmap\r\n    #   mountPath: /prometheus\r\n    #   subPath: \"\"\r\n    #   configMap: certs-configmap\r\n    #   readOnly: true\r\n\r\n  ## Additional Prometheus server Secret mounts\r\n  # Defines additional mounts with secrets. Secrets must be manually created in the namespace.\r\n  extraSecretMounts: []\r\n    # - name: secret-files\r\n    #   mountPath: /etc/secrets\r\n    #   subPath: \"\"\r\n    #   secretName: prom-secret-files\r\n    #   readOnly: true\r\n\r\n  ## ConfigMap override where fullname is {{.Release.Name}}-{{.Values.server.configMapOverrideName}}\r\n  ## Defining configMapOverrideName will cause templates/server-configmap.yaml\r\n  ## to NOT generate a ConfigMap resource\r\n  ##\r\n  configMapOverrideName: \"\"\r\n\r\n  ## Extra labels for Prometheus server ConfigMap (ConfigMap that holds serverFiles)\r\n  extraConfigmapLabels: {}\r\n\r\n  ingress:\r\n    ## If true, Prometheus server Ingress will be created\r\n    ##\r\n    enabled: false\r\n\r\n    # For Kubernetes \u003e= 1.18 you should specify the ingress-controller via the field ingressClassName\r\n    # See https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/#specifying-the-class-of-an-ingress\r\n    # ingressClassName: nginx\r\n\r\n    ## Prometheus server Ingress annotations\r\n    ##\r\n    annotations: {}\r\n    #   kubernetes.io/ingress.class: nginx\r\n    #   kubernetes.io/tls-acme: 'true'\r\n\r\n    ## Prometheus server Ingress additional labels\r\n    ##\r\n    extraLabels: {}\r\n\r\n    ## Prometheus server Ingress hostnames with optional path\r\n    ## Must be provided if Ingress is enabled\r\n    ##\r\n    hosts: []\r\n    #   - prometheus.domain.com\r\n    #   - domain.com/prometheus\r\n\r\n    path: /\r\n\r\n    # pathType is only for k8s \u003e= 1.18\r\n    pathType: Prefix\r\n\r\n    ## Extra paths to prepend to every host configuration. This is useful when working with annotation based services.\r\n    extraPaths: []\r\n    # - path: /*\r\n    #   backend:\r\n    #     serviceName: ssl-redirect\r\n    #     servicePort: use-annotation\r\n\r\n    ## Prometheus server Ingress TLS configuration\r\n    ## Secrets must be manually created in the namespace\r\n    ##\r\n    tls: []\r\n    #   - secretName: prometheus-server-tls\r\n    #     hosts:\r\n    #       - prometheus.domain.com\r\n\r\n  ## Server Deployment Strategy type\r\n  strategy:\r\n    type: Recreate\r\n\r\n  ## hostAliases allows adding entries to /etc/hosts inside the containers\r\n  hostAliases: []\r\n  #   - ip: \"127.0.0.1\"\r\n  #     hostnames:\r\n  #       - \"example.com\"\r\n\r\n  ## Node tolerations for server scheduling to nodes with taints\r\n  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/\r\n  ##\r\n  tolerations: []\r\n    # - key: \"key\"\r\n    #   operator: \"Equal|Exists\"\r\n    #   value: \"value\"\r\n    #   effect: \"NoSchedule|PreferNoSchedule|NoExecute(1.6 only)\"\r\n\r\n  ## Node labels for Prometheus server pod assignment\r\n  ## Ref: https://kubernetes.io/docs/user-guide/node-selection/\r\n  ##\r\n  nodeSelector: {}\r\n\r\n  ## Pod affinity\r\n  ##\r\n  affinity: {}\r\n\r\n  ## PodDisruptionBudget settings\r\n  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/\r\n  ##\r\n  podDisruptionBudget:\r\n    enabled: false\r\n    maxUnavailable: 1\r\n\r\n  ## Use an alternate scheduler, e.g. \"stork\".\r\n  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/\r\n  ##\r\n  # schedulerName:\r\n\r\n  persistentVolume:\r\n    ## If true, Prometheus server will create/use a Persistent Volume Claim\r\n    ## If false, use emptyDir\r\n    ##\r\n    enabled: true\r\n\r\n    ## Prometheus server data Persistent Volume access modes\r\n    ## Must match those of existing PV or dynamic provisioner\r\n    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/\r\n    ##\r\n    accessModes:\r\n      - ReadWriteOnce\r\n\r\n    ## Prometheus server data Persistent Volume labels\r\n    ##\r\n    labels: {}\r\n\r\n    ## Prometheus server data Persistent Volume annotations\r\n    ##\r\n    annotations: {}\r\n\r\n    ## Prometheus server data Persistent Volume existing claim name\r\n    ## Requires server.persistentVolume.enabled: true\r\n    ## If defined, PVC must be created manually before volume will be bound\r\n    existingClaim: \"\"\r\n\r\n    ## Prometheus server data Persistent Volume mount root path\r\n    ##\r\n    mountPath: /data\r\n\r\n    ## Prometheus server data Persistent Volume size\r\n    ##\r\n    size: 8Gi\r\n\r\n    ## Prometheus server data Persistent Volume Storage Class\r\n    ## If defined, storageClassName: \u003cstorageClass\u003e\r\n    ## If set to \"-\", storageClassName: \"\", which disables dynamic provisioning\r\n    ## If undefined (the default) or set to null, no storageClassName spec is\r\n    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on\r\n    ##   GKE, AWS \u0026 OpenStack)\r\n    ##\r\n    # storageClass: \"-\"\r\n\r\n    ## Prometheus server data Persistent Volume Binding Mode\r\n    ## If defined, volumeBindingMode: \u003cvolumeBindingMode\u003e\r\n    ## If undefined (the default) or set to null, no volumeBindingMode spec is\r\n    ##   set, choosing the default mode.\r\n    ##\r\n    # volumeBindingMode: \"\"\r\n\r\n    ## Subdirectory of Prometheus server data Persistent Volume to mount\r\n    ## Useful if the volume's root directory is not empty\r\n    ##\r\n    subPath: \"\"\r\n\r\n    ## Persistent Volume Claim Selector\r\n    ## Useful if Persistent Volumes have been provisioned in advance\r\n    ## Ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#selector\r\n    ##\r\n    # selector:\r\n    #  matchLabels:\r\n    #    release: \"stable\"\r\n    #  matchExpressions:\r\n    #    - { key: environment, operator: In, values: [ dev ] }\r\n\r\n    ## Persistent Volume Name\r\n    ## Useful if Persistent Volumes have been provisioned in advance and you want to use a specific one\r\n    ##\r\n    # volumeName: \"\"\r\n\r\n  emptyDir:\r\n    ## Prometheus server emptyDir volume size limit\r\n    ##\r\n    sizeLimit: \"\"\r\n\r\n  ## Annotations to be added to Prometheus server pods\r\n  ##\r\n  podAnnotations: {}\r\n    # iam.amazonaws.com/role: prometheus\r\n\r\n  ## Labels to be added to Prometheus server pods\r\n  ##\r\n  podLabels: {}\r\n\r\n  ## Prometheus AlertManager configuration\r\n  ##\r\n  alertmanagers: []\r\n\r\n  ## Specify if a Pod Security Policy for node-exporter must be created\r\n  ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/\r\n  ##\r\n  podSecurityPolicy:\r\n    annotations: {}\r\n      ## Specify pod annotations\r\n      ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#apparmor\r\n      ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#seccomp\r\n      ## Ref: https://kubernetes.io/docs/concepts/policy/pod-security-policy/#sysctl\r\n      ##\r\n      # seccomp.security.alpha.kubernetes.io/allowedProfileNames: '*'\r\n      # seccomp.security.alpha.kubernetes.io/defaultProfileName: 'docker/default'\r\n      # apparmor.security.beta.kubernetes.io/defaultProfileName: 'runtime/default'\r\n\r\n  ## Use a StatefulSet if replicaCount needs to be greater than 1 (see below)\r\n  ##\r\n  replicaCount: 1\r\n\r\n  ## Annotations to be added to deployment\r\n  ##\r\n  deploymentAnnotations: {}\r\n\r\n  statefulSet:\r\n    ## If true, use a statefulset instead of a deployment for pod management.\r\n    ## This allows to scale replicas to more than 1 pod\r\n    ##\r\n    enabled: false\r\n\r\n    annotations: {}\r\n    labels: {}\r\n    podManagementPolicy: OrderedReady\r\n\r\n    ## Alertmanager headless service to use for the statefulset\r\n    ##\r\n    headless:\r\n      annotations: {}\r\n      labels: {}\r\n      servicePort: 80\r\n      ## Enable gRPC port on service to allow auto discovery with thanos-querier\r\n      gRPC:\r\n        enabled: false\r\n        servicePort: 10901\r\n        # nodePort: 10901\r\n\r\n  ## Prometheus server readiness and liveness probe initial delay and timeout\r\n  ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/\r\n  ##\r\n  tcpSocketProbeEnabled: false\r\n  probeScheme: HTTP\r\n  readinessProbeInitialDelay: 30\r\n  readinessProbePeriodSeconds: 5\r\n  readinessProbeTimeout: 4\r\n  readinessProbeFailureThreshold: 3\r\n  readinessProbeSuccessThreshold: 1\r\n  livenessProbeInitialDelay: 30\r\n  livenessProbePeriodSeconds: 15\r\n  livenessProbeTimeout: 10\r\n  livenessProbeFailureThreshold: 3\r\n  livenessProbeSuccessThreshold: 1\r\n  startupProbe:\r\n    enabled: false\r\n    periodSeconds: 5\r\n    failureThreshold: 30\r\n    timeoutSeconds: 10\r\n\r\n  ## Prometheus server resource requests and limits\r\n  ## Ref: http://kubernetes.io/docs/user-guide/compute-resources/\r\n  ##\r\n  resources: {}\r\n    # limits:\r\n    #   cpu: 500m\r\n    #   memory: 512Mi\r\n    # requests:\r\n    #   cpu: 500m\r\n    #   memory: 512Mi\r\n\r\n  # Required for use in managed kubernetes clusters (such as AWS EKS) with custom CNI (such as calico),\r\n  # because control-plane managed by AWS cannot communicate with pods' IP CIDR and admission webhooks are not working\r\n  ##\r\n  hostNetwork: false\r\n\r\n  # When hostNetwork is enabled, this will set to ClusterFirstWithHostNet automatically\r\n  dnsPolicy: ClusterFirst\r\n\r\n  # Use hostPort\r\n  # hostPort: 9090\r\n\r\n  ## Vertical Pod Autoscaler config\r\n  ## Ref: https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler\r\n  verticalAutoscaler:\r\n    ## If true a VPA object will be created for the controller (either StatefulSet or Deployemnt, based on above configs)\r\n    enabled: false\r\n    # updateMode: \"Auto\"\r\n    # containerPolicies:\r\n    # - containerName: 'prometheus-server'\r\n\r\n  # Custom DNS configuration to be added to prometheus server pods\r\n  dnsConfig: {}\r\n    # nameservers:\r\n    #   - 1.2.3.4\r\n    # searches:\r\n    #   - ns1.svc.cluster-domain.example\r\n    #   - my.dns.search.suffix\r\n    # options:\r\n    #   - name: ndots\r\n    #     value: \"2\"\r\n  #   - name: edns0\r\n\r\n  ## Security context to be added to server pods\r\n  ##\r\n  securityContext:\r\n    runAsUser: 65534\r\n    runAsNonRoot: true\r\n    runAsGroup: 65534\r\n    fsGroup: 65534\r\n\r\n  ## Security context to be added to server container\r\n  ##\r\n  containerSecurityContext: {}\r\n\r\n  service:\r\n    ## If false, no Service will be created for the Prometheus server\r\n    ##\r\n    enabled: true\r\n\r\n    annotations: {}\r\n    labels: {}\r\n    clusterIP: \"\"\r\n\r\n    ## List of IP addresses at which the Prometheus server service is available\r\n    ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips\r\n    ##\r\n    externalIPs: []\r\n\r\n    loadBalancerIP: \"\"\r\n    loadBalancerSourceRanges: []\r\n    servicePort: 80\r\n    sessionAffinity: None\r\n    type: ClusterIP\r\n\r\n    ## Enable gRPC port on service to allow auto discovery with thanos-querier\r\n    gRPC:\r\n      enabled: false\r\n      servicePort: 10901\r\n      # nodePort: 10901\r\n\r\n    ## If using a statefulSet (statefulSet.enabled=true), configure the\r\n    ## service to connect to a specific replica to have a consistent view\r\n    ## of the data.\r\n    statefulsetReplica:\r\n      enabled: false\r\n      replica: 0\r\n\r\n  ## Prometheus server pod termination grace period\r\n  ##\r\n  terminationGracePeriodSeconds: 300\r\n\r\n  ## Prometheus data retention period (default if not specified is 15 days)\r\n  ##\r\n  retention: \"15d\"\r\n\r\n## Prometheus server ConfigMap entries for rule files (allow prometheus labels interpolation)\r\nruleFiles: {}\r\n\r\n## Prometheus server ConfigMap entries\r\n##\r\nserverFiles:\r\n  ## Alerts configuration\r\n  ## Ref: https://prometheus.io/docs/prometheus/latest/configuration/alerting_rules/\r\n  alerting_rules.yml: {}\r\n  # groups:\r\n  #   - name: Instances\r\n  #     rules:\r\n  #       - alert: InstanceDown\r\n  #         expr: up == 0\r\n  #         for: 5m\r\n  #         labels:\r\n  #           severity: page\r\n  #         annotations:\r\n  #           description: '{{ $labels.instance }} of job {{ $labels.job }} has been down for more than 5 minutes.'\r\n  #           summary: 'Instance {{ $labels.instance }} down'\r\n  ## DEPRECATED DEFAULT VALUE, unless explicitly naming your files, please use alerting_rules.yml\r\n  alerts: {}\r\n\r\n  ## Records configuration\r\n  ## Ref: https://prometheus.io/docs/prometheus/latest/configuration/recording_rules/\r\n  recording_rules.yml: {}\r\n  ## DEPRECATED DEFAULT VALUE, unless explicitly naming your files, please use recording_rules.yml\r\n  rules: {}\r\n\r\n  prometheus.yml:\r\n    rule_files:\r\n      - /etc/config/recording_rules.yml\r\n      - /etc/config/alerting_rules.yml\r\n    ## Below two files are DEPRECATED will be removed from this default values file\r\n      - /etc/config/rules\r\n      - /etc/config/alerts\r\n\r\n    scrape_configs:\r\n      - job_name: prometheus\r\n        static_configs:\r\n          - targets:\r\n            - localhost:9090\r\n\r\n      # A scrape configuration for running Prometheus on a Kubernetes cluster.\r\n      # This uses separate scrape configs for cluster components (i.e. API server, node)\r\n      # and services to allow each to use different authentication configs.\r\n      #\r\n      # Kubernetes labels will be added as Prometheus labels on metrics via the\r\n      # `labelmap` relabeling action.\r\n\r\n      # Scrape config for API servers.\r\n      #\r\n      # Kubernetes exposes API servers as endpoints to the default/kubernetes\r\n      # service so this uses `endpoints` role and uses relabelling to only keep\r\n      # the endpoints associated with the default/kubernetes service using the\r\n      # default named port `https`. This works for single API server deployments as\r\n      # well as HA API server deployments.\r\n      - job_name: 'kubernetes-apiservers'\r\n\r\n        kubernetes_sd_configs:\r\n          - role: endpoints\r\n\r\n        # Default to scraping over https. If required, just disable this or change to\r\n        # `http`.\r\n        scheme: https\r\n\r\n        # This TLS \u0026 bearer token file config is used to connect to the actual scrape\r\n        # endpoints for cluster components. This is separate to discovery auth\r\n        # configuration because discovery \u0026 scraping are two separate concerns in\r\n        # Prometheus. The discovery auth config is automatic if Prometheus runs inside\r\n        # the cluster. Otherwise, more config options have to be provided within the\r\n        # \u003ckubernetes_sd_config\u003e.\r\n        tls_config:\r\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n          # If your node certificates are self-signed or use a different CA to the\r\n          # master CA, then disable certificate verification below. Note that\r\n          # certificate verification is an integral part of a secure infrastructure\r\n          # so this should only be disabled in a controlled environment. You can\r\n          # disable certificate verification by uncommenting the line below.\r\n          #\r\n          insecure_skip_verify: true\r\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n\r\n        # Keep only the default/kubernetes service endpoints for the https port. This\r\n        # will add targets for each API server which Kubernetes adds an endpoint to\r\n        # the default/kubernetes service.\r\n        relabel_configs:\r\n          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]\r\n            action: keep\r\n            regex: default;kubernetes;https\r\n\r\n      - job_name: 'kubernetes-nodes'\r\n\r\n        # Default to scraping over https. If required, just disable this or change to\r\n        # `http`.\r\n        scheme: https\r\n\r\n        # This TLS \u0026 bearer token file config is used to connect to the actual scrape\r\n        # endpoints for cluster components. This is separate to discovery auth\r\n        # configuration because discovery \u0026 scraping are two separate concerns in\r\n        # Prometheus. The discovery auth config is automatic if Prometheus runs inside\r\n        # the cluster. Otherwise, more config options have to be provided within the\r\n        # \u003ckubernetes_sd_config\u003e.\r\n        tls_config:\r\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n          # If your node certificates are self-signed or use a different CA to the\r\n          # master CA, then disable certificate verification below. Note that\r\n          # certificate verification is an integral part of a secure infrastructure\r\n          # so this should only be disabled in a controlled environment. You can\r\n          # disable certificate verification by uncommenting the line below.\r\n          #\r\n          insecure_skip_verify: true\r\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n\r\n        kubernetes_sd_configs:\r\n          - role: node\r\n\r\n        relabel_configs:\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_node_label_(.+)\r\n          - target_label: __address__\r\n            replacement: kubernetes.default.svc:443\r\n          - source_labels: [__meta_kubernetes_node_name]\r\n            regex: (.+)\r\n            target_label: __metrics_path__\r\n            replacement: /api/v1/nodes/$1/proxy/metrics\r\n\r\n\r\n      - job_name: 'kubernetes-nodes-cadvisor'\r\n\r\n        # Default to scraping over https. If required, just disable this or change to\r\n        # `http`.\r\n        scheme: https\r\n\r\n        # This TLS \u0026 bearer token file config is used to connect to the actual scrape\r\n        # endpoints for cluster components. This is separate to discovery auth\r\n        # configuration because discovery \u0026 scraping are two separate concerns in\r\n        # Prometheus. The discovery auth config is automatic if Prometheus runs inside\r\n        # the cluster. Otherwise, more config options have to be provided within the\r\n        # \u003ckubernetes_sd_config\u003e.\r\n        tls_config:\r\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\r\n          # If your node certificates are self-signed or use a different CA to the\r\n          # master CA, then disable certificate verification below. Note that\r\n          # certificate verification is an integral part of a secure infrastructure\r\n          # so this should only be disabled in a controlled environment. You can\r\n          # disable certificate verification by uncommenting the line below.\r\n          #\r\n          insecure_skip_verify: true\r\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\r\n\r\n        kubernetes_sd_configs:\r\n          - role: node\r\n\r\n        # This configuration will work only on kubelet 1.7.3+\r\n        # As the scrape endpoints for cAdvisor have changed\r\n        # if you are using older version you need to change the replacement to\r\n        # replacement: /api/v1/nodes/$1:4194/proxy/metrics\r\n        # more info here https://github.com/coreos/prometheus-operator/issues/633\r\n        relabel_configs:\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_node_label_(.+)\r\n          - target_label: __address__\r\n            replacement: kubernetes.default.svc:443\r\n          - source_labels: [__meta_kubernetes_node_name]\r\n            regex: (.+)\r\n            target_label: __metrics_path__\r\n            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor\r\n\r\n        # Metric relabel configs to apply to samples before ingestion.\r\n        # [Metric Relabeling](https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs)\r\n        # metric_relabel_configs:\r\n        # - action: labeldrop\r\n        #   regex: (kubernetes_io_hostname|failure_domain_beta_kubernetes_io_region|beta_kubernetes_io_os|beta_kubernetes_io_arch|beta_kubernetes_io_instance_type|failure_domain_beta_kubernetes_io_zone)\r\n\r\n      # Scrape config for service endpoints.\r\n      #\r\n      # The relabeling allows the actual service scrape endpoint to be configured\r\n      # via the following annotations:\r\n      #\r\n      # * `prometheus.io/scrape`: Only scrape services that have a value of\r\n      # `true`, except if `prometheus.io/scrape-slow` is set to `true` as well.\r\n      # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need\r\n      # to set this to `https` \u0026 most likely set the `tls_config` of the scrape config.\r\n      # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\r\n      # * `prometheus.io/port`: If the metrics are exposed on a different port to the\r\n      # service then set this appropriately.\r\n      # * `prometheus.io/param_\u003cparameter\u003e`: If the metrics endpoint uses parameters\r\n      # then you can set any parameter\r\n      - job_name: 'kubernetes-service-endpoints'\r\n        honor_labels: true\r\n\r\n        kubernetes_sd_configs:\r\n          - role: endpoints\r\n\r\n        relabel_configs:\r\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]\r\n            action: keep\r\n            regex: true\r\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]\r\n            action: drop\r\n            regex: true\r\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\r\n            action: replace\r\n            target_label: __scheme__\r\n            regex: (https?)\r\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\r\n            action: replace\r\n            target_label: __metrics_path__\r\n            regex: (.+)\r\n          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\r\n            action: replace\r\n            target_label: __address__\r\n            regex: (.+?)(?::\\d+)?;(\\d+)\r\n            replacement: $1:$2\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)\r\n            replacement: __param_$1\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_service_label_(.+)\r\n          - source_labels: [__meta_kubernetes_namespace]\r\n            action: replace\r\n            target_label: namespace\r\n          - source_labels: [__meta_kubernetes_service_name]\r\n            action: replace\r\n            target_label: service\r\n          - source_labels: [__meta_kubernetes_pod_node_name]\r\n            action: replace\r\n            target_label: node\r\n\r\n      # Scrape config for slow service endpoints; same as above, but with a larger\r\n      # timeout and a larger interval\r\n      #\r\n      # The relabeling allows the actual service scrape endpoint to be configured\r\n      # via the following annotations:\r\n      #\r\n      # * `prometheus.io/scrape-slow`: Only scrape services that have a value of `true`\r\n      # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need\r\n      # to set this to `https` \u0026 most likely set the `tls_config` of the scrape config.\r\n      # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\r\n      # * `prometheus.io/port`: If the metrics are exposed on a different port to the\r\n      # service then set this appropriately.\r\n      # * `prometheus.io/param_\u003cparameter\u003e`: If the metrics endpoint uses parameters\r\n      # then you can set any parameter\r\n      - job_name: 'kubernetes-service-endpoints-slow'\r\n        honor_labels: true\r\n\r\n        scrape_interval: 5m\r\n        scrape_timeout: 30s\r\n\r\n        kubernetes_sd_configs:\r\n          - role: endpoints\r\n\r\n        relabel_configs:\r\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]\r\n            action: keep\r\n            regex: true\r\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]\r\n            action: replace\r\n            target_label: __scheme__\r\n            regex: (https?)\r\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]\r\n            action: replace\r\n            target_label: __metrics_path__\r\n            regex: (.+)\r\n          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]\r\n            action: replace\r\n            target_label: __address__\r\n            regex: (.+?)(?::\\d+)?;(\\d+)\r\n            replacement: $1:$2\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)\r\n            replacement: __param_$1\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_service_label_(.+)\r\n          - source_labels: [__meta_kubernetes_namespace]\r\n            action: replace\r\n            target_label: namespace\r\n          - source_labels: [__meta_kubernetes_service_name]\r\n            action: replace\r\n            target_label: service\r\n          - source_labels: [__meta_kubernetes_pod_node_name]\r\n            action: replace\r\n            target_label: node\r\n\r\n      - job_name: 'prometheus-pushgateway'\r\n        honor_labels: true\r\n\r\n        kubernetes_sd_configs:\r\n          - role: service\r\n\r\n        relabel_configs:\r\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\r\n            action: keep\r\n            regex: pushgateway\r\n\r\n      # Example scrape config for probing services via the Blackbox Exporter.\r\n      #\r\n      # The relabeling allows the actual service scrape endpoint to be configured\r\n      # via the following annotations:\r\n      #\r\n      # * `prometheus.io/probe`: Only probe services that have a value of `true`\r\n      - job_name: 'kubernetes-services'\r\n        honor_labels: true\r\n\r\n        metrics_path: /probe\r\n        params:\r\n          module: [http_2xx]\r\n\r\n        kubernetes_sd_configs:\r\n          - role: service\r\n\r\n        relabel_configs:\r\n          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]\r\n            action: keep\r\n            regex: true\r\n          - source_labels: [__address__]\r\n            target_label: __param_target\r\n          - target_label: __address__\r\n            replacement: blackbox\r\n          - source_labels: [__param_target]\r\n            target_label: instance\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_service_label_(.+)\r\n          - source_labels: [__meta_kubernetes_namespace]\r\n            target_label: namespace\r\n          - source_labels: [__meta_kubernetes_service_name]\r\n            target_label: service\r\n\r\n      # Example scrape config for pods\r\n      #\r\n      # The relabeling allows the actual pod scrape endpoint to be configured via the\r\n      # following annotations:\r\n      #\r\n      # * `prometheus.io/scrape`: Only scrape pods that have a value of `true`,\r\n      # except if `prometheus.io/scrape-slow` is set to `true` as well.\r\n      # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need\r\n      # to set this to `https` \u0026 most likely set the `tls_config` of the scrape config.\r\n      # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\r\n      # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.\r\n      - job_name: 'kubernetes-pods'\r\n        honor_labels: true\r\n\r\n        kubernetes_sd_configs:\r\n          - role: pod\r\n\r\n        relabel_configs:\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]\r\n            action: keep\r\n            regex: true\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]\r\n            action: drop\r\n            regex: true\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\r\n            action: replace\r\n            regex: (https?)\r\n            target_label: __scheme__\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\r\n            action: replace\r\n            target_label: __metrics_path__\r\n            regex: (.+)\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]\r\n            action: replace\r\n            regex: (\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\r\n            replacement: '[$2]:$1'\r\n            target_label: __address__\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]\r\n            action: replace\r\n            regex: (\\d+);((([0-9]+?)(\\.|$)){4})\r\n            replacement: $2:$1\r\n            target_label: __address__\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\r\n            replacement: __param_$1\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_pod_label_(.+)\r\n          - source_labels: [__meta_kubernetes_namespace]\r\n            action: replace\r\n            target_label: namespace\r\n          - source_labels: [__meta_kubernetes_pod_name]\r\n            action: replace\r\n            target_label: pod\r\n          - source_labels: [__meta_kubernetes_pod_phase]\r\n            regex: Pending|Succeeded|Failed|Completed\r\n            action: drop\r\n\r\n      # Example Scrape config for pods which should be scraped slower. An useful example\r\n      # would be stackriver-exporter which queries an API on every scrape of the pod\r\n      #\r\n      # The relabeling allows the actual pod scrape endpoint to be configured via the\r\n      # following annotations:\r\n      #\r\n      # * `prometheus.io/scrape-slow`: Only scrape pods that have a value of `true`\r\n      # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need\r\n      # to set this to `https` \u0026 most likely set the `tls_config` of the scrape config.\r\n      # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.\r\n      # * `prometheus.io/port`: Scrape the pod on the indicated port instead of the default of `9102`.\r\n      - job_name: 'kubernetes-pods-slow'\r\n        honor_labels: true\r\n\r\n        scrape_interval: 5m\r\n        scrape_timeout: 30s\r\n\r\n        kubernetes_sd_configs:\r\n          - role: pod\r\n\r\n        relabel_configs:\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow]\r\n            action: keep\r\n            regex: true\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]\r\n            action: replace\r\n            regex: (https?)\r\n            target_label: __scheme__\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]\r\n            action: replace\r\n            target_label: __metrics_path__\r\n            regex: (.+)\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]\r\n            action: replace\r\n            regex: (\\d+);(([A-Fa-f0-9]{1,4}::?){1,7}[A-Fa-f0-9]{1,4})\r\n            replacement: '[$2]:$1'\r\n            target_label: __address__\r\n          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_port, __meta_kubernetes_pod_ip]\r\n            action: replace\r\n            regex: (\\d+);((([0-9]+?)(\\.|$)){4})\r\n            replacement: $2:$1\r\n            target_label: __address__\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\r\n            replacement: __param_$1\r\n          - action: labelmap\r\n            regex: __meta_kubernetes_pod_label_(.+)\r\n          - source_labels: [__meta_kubernetes_namespace]\r\n            action: replace\r\n            target_label: namespace\r\n          - source_labels: [__meta_kubernetes_pod_name]\r\n            action: replace\r\n            target_label: pod\r\n          - source_labels: [__meta_kubernetes_pod_phase]\r\n            regex: Pending|Succeeded|Failed|Completed\r\n            action: drop\r\n\r\n# adds additional scrape configs to prometheus.yml\r\n# must be a string so you have to add a | after extraScrapeConfigs:\r\n# example adds prometheus-blackbox-exporter scrape config\r\nextraScrapeConfigs: \"\"\r\n  # - job_name: 'prometheus-blackbox-exporter'\r\n  #   metrics_path: /probe\r\n  #   params:\r\n  #     module: [http_2xx]\r\n  #   static_configs:\r\n  #     - targets:\r\n  #       - https://example.com\r\n  #   relabel_configs:\r\n  #     - source_labels: [__address__]\r\n  #       target_label: __param_target\r\n  #     - source_labels: [__param_target]\r\n  #       target_label: instance\r\n  #     - target_label: __address__\r\n  #       replacement: prometheus-blackbox-exporter:9115\r\n\r\n# Adds option to add alert_relabel_configs to avoid duplicate alerts in alertmanager\r\n# useful in H/A prometheus with different external labels but the same alerts\r\nalertRelabelConfigs: {}\r\n  # alert_relabel_configs:\r\n  # - source_labels: [dc]\r\n  #   regex: (.+)\\d+\r\n  #   target_label: dc\r\n\r\nnetworkPolicy:\r\n  ## Enable creation of NetworkPolicy resources.\r\n  ##\r\n  enabled: false\r\n\r\n# Force namespace of namespaced resources\r\nforceNamespace: \"\"\r\n\r\n# Extra manifests to deploy as an array\r\nextraManifests: []\r\n  # - apiVersion: v1\r\n  #   kind: ConfigMap\r\n  #   metadata:\r\n  #   labels:\r\n  #     name: prometheus-extra\r\n  #   data:\r\n  #     extra-data: \"value\"\r\n\r\n# Configuration of subcharts defined in Chart.yaml\r\n\r\n## alertmanager sub-chart configurable values\r\n## Please see https://github.com/prometheus-community/helm-charts/tree/main/charts/alertmanager\r\n##\r\nalertmanager:\r\n  ## If false, alertmanager will not be installed\r\n  ##\r\n  enabled: true\r\n\r\n  persistence:\r\n    size: 2Gi\r\n\r\n  podSecurityContext:\r\n    runAsUser: 65534\r\n    runAsNonRoot: true\r\n    runAsGroup: 65534\r\n    fsGroup: 65534\r\n\r\n## kube-state-metrics sub-chart configurable values\r\n## Please see https://github.com/prometheus-community/helm-charts/tree/main/charts/kube-state-metrics\r\n##\r\nkube-state-metrics:\r\n  ## If false, kube-state-metrics sub-chart will not be installed\r\n  ##\r\n  enabled: true\r\n\r\n## promtheus-node-exporter sub-chart configurable values\r\n## Please see https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus-node-exporter\r\n##\r\nprometheus-node-exporter:\r\n  ## If false, node-exporter will not be installed\r\n  ##\r\n  enabled: true\r\n\r\n  rbac:\r\n    pspEnabled: false\r\n\r\n  containerSecurityContext:\r\n    allowPrivilegeEscalation: false\r\n\r\n## pprometheus-pushgateway sub-chart configurable values\r\n## Please see https://github.com/prometheus-community/helm-charts/tree/main/charts/prometheus-pushgateway\r\n##\r\nprometheus-pushgateway:\r\n  ## If false, pushgateway will not be installed\r\n  ##\r\n  enabled: true\r\n\r\n  # Optional service annotations\r\n  serviceAnnotations:\r\n    prometheus.io/probe: pushgateway"
            ],
            "verify": false,
            "version": "51.3.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.terraform_remote_state.eks",
            "module.eks-monitoring.kubernetes_namespace.kube-namespace"
          ]
        }
      ]
    },
    {
      "module": "module.eks-monitoring",
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "kube-namespace",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "prometheus",
            "metadata": [
              {
                "annotations": null,
                "generate_name": "",
                "generation": 0,
                "labels": null,
                "name": "prometheus",
                "resource_version": "69130",
                "uid": "d05166c7-46e4-4ebb-a489-ecd3b6fdfbf0"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "data.aws_eks_cluster.cluster",
            "data.aws_eks_cluster_auth.cluster",
            "data.terraform_remote_state.eks"
          ]
        }
      ]
    },
    {
      "module": "module.eks-oidc",
      "mode": "data",
      "type": "aws_partition",
      "name": "current",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dns_suffix": "amazonaws.com",
            "id": "aws",
            "partition": "aws",
            "reverse_dns_prefix": "com.amazonaws"
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-oidc",
      "mode": "data",
      "type": "terraform_remote_state",
      "name": "eks",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backend": "local",
            "config": {
              "value": {
                "path": "../infrastructure/terraform.tfstate"
              },
              "type": [
                "object",
                {
                  "path": "string"
                }
              ]
            },
            "defaults": null,
            "outputs": {
              "value": {
                "eks-cluster": {
                  "cluster_arn": "arn:aws:eks:us-east-1:339712838104:cluster/ekscluster",
                  "cluster_certificate_authority_data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJZnE0cFdJSDdNOU13RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TkRFeE1qTXdOekk0TWpkYUZ3MHpOREV4TWpFd056TXpNamRhTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURVYkdQQURQKzZXVTlvZ3ViRSs4RVNuV2lRUnlIaHFGWHg3YkFtY1RaSjJ4S1JuVllFQzRnZXBHZkEKZUxkTVRPN3IyRThNTHVkQ21vQzlqVHhndjdTTnQyK3c0Q0JYTzFWMVhlY3c2ak5oOXZMNFB3bDlJcC9mdFZLTAo1azliR2RpYmFyc0NYam5Ybkp0S3BzZWxZN2JzdzgrY0VHWU5Qem1IM2o0Z1BBSC81VVpnQXFGTG41YkJqdUlrCkErMTZlK2dkTjBFeER2OWtGdnRROG92YnRXa2NNZWlGYlZqZ3BNYm5QNmd5TzlrMzc4OS9vMWxKMHUxSTQwVmsKakNudlNhYjAvYTNvS3pIWllDZHY0OHhNVUVlNkpSZDZBYklTdkhaalZkU293WUhnZ0lKWWlUTFY1Yzc3bVpOcQp4MGxxcHMzdzUvQlhRM2xETEJSZ2pJTnI5Ry9KQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSWkY3cGhZbWlLNjQ3eTNneFRnb2IwTVoxUFNUQVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQXVvOFFLRlhZYgpSUXFndGRSdTRoMHhZdk96Q245VWtzcC9aTWRhbnp4VjhWeVJFSW9JMEJ6MjVDL3BpZlFtZU9mcFh0Zjhjb3ByCnY2dUlsYXpSZEhLamlRUEVqL3doQ1VPQXlXZUxYMTlMQmdUSDJuaFlvOW44dzFSZTEycCtXNDRpc1hUdWV0eksKL0sydytlSW50UkZ4U2lPVXUxWlhSK3dzdDl2a1lYWW5PMjNyK1R4aWRsMnVYb05FWjIwQ2gxd08yeVBsRld1eQpPMDVqS2FvTFBqUFdDL0lSYjhOZmVpdTlLYjIxTzRXaFZkaWpTeDQ3L0RoSmE2cVlSeG9KbUlUK1BOMEdrZlFQCmlVYmd1MTJFUzVwdlFOR0hlenlDZ3dBZEN2dnJlcFZObWFjK2xKeHplcGFkK2M4YzFjdUtnU1lPRzAxanpWdWEKVkszSDRBQXcydHNPCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                  "cluster_endpoint": "https://649E59EF10663E5640E6B10C6085A2E0.gr7.us-east-1.eks.amazonaws.com",
                  "cluster_iam_role_arn": "arn:aws:iam::339712838104:role/eks-master-role",
                  "cluster_iam_role_name": "eks-master-role",
                  "cluster_id": "ekscluster",
                  "cluster_oidc_issuer_url": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
                  "cluster_primary_security_group_id": "sg-0bb8c08f481ef2c67",
                  "cluster_version": "1.31",
                  "identity": [
                    {
                      "oidc": [
                        {
                          "issuer": "https://oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                        }
                      ]
                    }
                  ],
                  "node_group_public_arn": "arn:aws:eks:us-east-1:339712838104:nodegroup/ekscluster/eks-ng-public/3ac9abfa-1b54-86c5-fb61-92467486ca4c",
                  "node_group_public_id": "ekscluster:eks-ng-public",
                  "node_group_public_status": "ACTIVE",
                  "node_group_public_version": "1.31"
                },
                "eks-oidc": {
                  "aws_iam_openid_connect_provider_arn": "arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
                  "aws_iam_openid_connect_provider_extract_from_arn": "oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
                },
                "vpc": {
                  "azs": [
                    "us-east-1a",
                    "us-east-1b"
                  ],
                  "cidr_blocks": "10.0.0.0/16",
                  "database_subnets": [
                    "subnet-09ec127f68b6d6f77",
                    "subnet-094a1daaf674e437d"
                  ],
                  "private_subnets": [
                    "subnet-0bd92c39c351103e0",
                    "subnet-07baebba8fa24261f"
                  ],
                  "public_subnets": [
                    "subnet-048969fd7775ea556",
                    "subnet-05dc556ad99896454"
                  ],
                  "region": "us-east-1",
                  "vpc_id": "vpc-04995685231f22c83"
                }
              },
              "type": [
                "object",
                {
                  "eks-cluster": [
                    "object",
                    {
                      "cluster_arn": "string",
                      "cluster_certificate_authority_data": "string",
                      "cluster_endpoint": "string",
                      "cluster_iam_role_arn": "string",
                      "cluster_iam_role_name": "string",
                      "cluster_id": "string",
                      "cluster_oidc_issuer_url": "string",
                      "cluster_primary_security_group_id": "string",
                      "cluster_version": "string",
                      "identity": [
                        "list",
                        [
                          "object",
                          {
                            "oidc": [
                              "list",
                              [
                                "object",
                                {
                                  "issuer": "string"
                                }
                              ]
                            ]
                          }
                        ]
                      ],
                      "node_group_public_arn": "string",
                      "node_group_public_id": "string",
                      "node_group_public_status": "string",
                      "node_group_public_version": "string"
                    }
                  ],
                  "eks-oidc": [
                    "object",
                    {
                      "aws_iam_openid_connect_provider_arn": "string",
                      "aws_iam_openid_connect_provider_extract_from_arn": "string"
                    }
                  ],
                  "vpc": [
                    "object",
                    {
                      "azs": [
                        "list",
                        "string"
                      ],
                      "cidr_blocks": "string",
                      "database_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "private_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "public_subnets": [
                        "tuple",
                        [
                          "string",
                          "string"
                        ]
                      ],
                      "region": "string",
                      "vpc_id": "string"
                    }
                  ]
                }
              ]
            },
            "workspace": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.eks-oidc",
      "mode": "managed",
      "type": "aws_iam_openid_connect_provider",
      "name": "oidc_provider",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
            "client_id_list": [
              "sts.amazonaws.com"
            ],
            "id": "arn:aws:iam::339712838104:oidc-provider/oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0",
            "tags": {},
            "tags_all": {},
            "thumbprint_list": [
              "9451ad2b53c7f41fab22886cc07d482085336561"
            ],
            "url": "oidc.eks.us-east-1.amazonaws.com/id/649E59EF10663E5640E6B10C6085A2E0"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.eks-cluster.aws_eks_cluster.eks_cluster",
            "module.eks-cluster.aws_eks_node_group.eks_ng_public",
            "module.eks-cluster.aws_iam_role.eks_master_role",
            "module.eks-cluster.aws_iam_role.eks_nodegroup_role",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEC2ContainerRegistryReadOnly",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKSClusterPolicy",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKSVPCResourceController",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKSWorkerNodePolicy",
            "module.eks-cluster.aws_iam_role_policy_attachment.eks-AmazonEKS_CNI_Policy",
            "module.eks-oidc.data.aws_partition.current",
            "module.vpc.module.vpc.aws_cloudwatch_log_group.flow_log",
            "module.vpc.module.vpc.aws_customer_gateway.this",
            "module.vpc.module.vpc.aws_db_subnet_group.database",
            "module.vpc.module.vpc.aws_default_network_acl.this",
            "module.vpc.module.vpc.aws_default_route_table.default",
            "module.vpc.module.vpc.aws_default_security_group.this",
            "module.vpc.module.vpc.aws_default_vpc.this",
            "module.vpc.module.vpc.aws_egress_only_internet_gateway.this",
            "module.vpc.module.vpc.aws_eip.nat",
            "module.vpc.module.vpc.aws_elasticache_subnet_group.elasticache",
            "module.vpc.module.vpc.aws_flow_log.this",
            "module.vpc.module.vpc.aws_iam_policy.vpc_flow_log_cloudwatch",
            "module.vpc.module.vpc.aws_iam_role.vpc_flow_log_cloudwatch",
            "module.vpc.module.vpc.aws_iam_role_policy_attachment.vpc_flow_log_cloudwatch",
            "module.vpc.module.vpc.aws_internet_gateway.this",
            "module.vpc.module.vpc.aws_nat_gateway.this",
            "module.vpc.module.vpc.aws_network_acl.database",
            "module.vpc.module.vpc.aws_network_acl.elasticache",
            "module.vpc.module.vpc.aws_network_acl.intra",
            "module.vpc.module.vpc.aws_network_acl.outpost",
            "module.vpc.module.vpc.aws_network_acl.private",
            "module.vpc.module.vpc.aws_network_acl.public",
            "module.vpc.module.vpc.aws_network_acl.redshift",
            "module.vpc.module.vpc.aws_network_acl_rule.database_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.database_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.elasticache_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.elasticache_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.intra_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.intra_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.outpost_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.outpost_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.private_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.private_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.public_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.public_outbound",
            "module.vpc.module.vpc.aws_network_acl_rule.redshift_inbound",
            "module.vpc.module.vpc.aws_network_acl_rule.redshift_outbound",
            "module.vpc.module.vpc.aws_redshift_subnet_group.redshift",
            "module.vpc.module.vpc.aws_route.database_dns64_nat_gateway",
            "module.vpc.module.vpc.aws_route.database_internet_gateway",
            "module.vpc.module.vpc.aws_route.database_ipv6_egress",
            "module.vpc.module.vpc.aws_route.database_nat_gateway",
            "module.vpc.module.vpc.aws_route.private_dns64_nat_gateway",
            "module.vpc.module.vpc.aws_route.private_ipv6_egress",
            "module.vpc.module.vpc.aws_route.private_nat_gateway",
            "module.vpc.module.vpc.aws_route.public_internet_gateway",
            "module.vpc.module.vpc.aws_route.public_internet_gateway_ipv6",
            "module.vpc.module.vpc.aws_route_table.database",
            "module.vpc.module.vpc.aws_route_table.elasticache",
            "module.vpc.module.vpc.aws_route_table.intra",
            "module.vpc.module.vpc.aws_route_table.private",
            "module.vpc.module.vpc.aws_route_table.public",
            "module.vpc.module.vpc.aws_route_table.redshift",
            "module.vpc.module.vpc.aws_route_table_association.database",
            "module.vpc.module.vpc.aws_route_table_association.elasticache",
            "module.vpc.module.vpc.aws_route_table_association.intra",
            "module.vpc.module.vpc.aws_route_table_association.outpost",
            "module.vpc.module.vpc.aws_route_table_association.private",
            "module.vpc.module.vpc.aws_route_table_association.public",
            "module.vpc.module.vpc.aws_route_table_association.redshift",
            "module.vpc.module.vpc.aws_route_table_association.redshift_public",
            "module.vpc.module.vpc.aws_subnet.database",
            "module.vpc.module.vpc.aws_subnet.elasticache",
            "module.vpc.module.vpc.aws_subnet.intra",
            "module.vpc.module.vpc.aws_subnet.outpost",
            "module.vpc.module.vpc.aws_subnet.private",
            "module.vpc.module.vpc.aws_subnet.public",
            "module.vpc.module.vpc.aws_subnet.redshift",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_dhcp_options.this",
            "module.vpc.module.vpc.aws_vpc_dhcp_options_association.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this",
            "module.vpc.module.vpc.aws_vpn_gateway.this",
            "module.vpc.module.vpc.aws_vpn_gateway_attachment.this",
            "module.vpc.module.vpc.aws_vpn_gateway_route_propagation.intra",
            "module.vpc.module.vpc.aws_vpn_gateway_route_propagation.private",
            "module.vpc.module.vpc.aws_vpn_gateway_route_propagation.public",
            "module.vpc.module.vpc.data.aws_iam_policy_document.flow_log_cloudwatch_assume_role",
            "module.vpc.module.vpc.data.aws_iam_policy_document.vpc_flow_log_cloudwatch"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_db_subnet_group",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:rds:us-east-1:339712838104:subgrp:eks-gitlab-vpc",
            "description": "Database subnet group for eks-gitlab-vpc",
            "id": "eks-gitlab-vpc",
            "name": "eks-gitlab-vpc",
            "name_prefix": "",
            "subnet_ids": [
              "subnet-094a1daaf674e437d",
              "subnet-09ec127f68b6d6f77"
            ],
            "supported_network_types": [
              "IPV4"
            ],
            "tags": {
              "Name": "eks-gitlab-vpc"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc"
            },
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.module.vpc.aws_subnet.database",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_default_network_acl",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:network-acl/acl-03279f42ff117d7ac",
            "default_network_acl_id": "acl-03279f42ff117d7ac",
            "egress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "id": "acl-03279f42ff117d7ac",
            "ingress": [
              {
                "action": "allow",
                "cidr_block": "",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "::/0",
                "protocol": "-1",
                "rule_no": 101,
                "to_port": 0
              },
              {
                "action": "allow",
                "cidr_block": "0.0.0.0/0",
                "from_port": 0,
                "icmp_code": 0,
                "icmp_type": 0,
                "ipv6_cidr_block": "",
                "protocol": "-1",
                "rule_no": 100,
                "to_port": 0
              }
            ],
            "owner_id": "339712838104",
            "subnet_ids": [
              "subnet-048969fd7775ea556",
              "subnet-05dc556ad99896454",
              "subnet-07baebba8fa24261f",
              "subnet-094a1daaf674e437d",
              "subnet-09ec127f68b6d6f77",
              "subnet-0bd92c39c351103e0"
            ],
            "tags": {
              "Name": "eks-gitlab-vpc-default"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-default"
            },
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_default_route_table",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:route-table/rtb-0ea76b9b80c7c2b23",
            "default_route_table_id": "rtb-0ea76b9b80c7c2b23",
            "id": "rtb-0ea76b9b80c7c2b23",
            "owner_id": "339712838104",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "eks-gitlab-vpc-default"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-default"
            },
            "timeouts": {
              "create": "5m",
              "update": "5m"
            },
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsInVwZGF0ZSI6MzAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_default_security_group",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:security-group/sg-07fa0b02c57686dd9",
            "description": "default VPC security group",
            "egress": [],
            "id": "sg-07fa0b02c57686dd9",
            "ingress": [],
            "name": "default",
            "name_prefix": "",
            "owner_id": "339712838104",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "eks-gitlab-vpc-default"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-default"
            },
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:internet-gateway/igw-046ded18bf6546641",
            "id": "igw-046ded18bf6546641",
            "owner_id": "339712838104",
            "tags": {
              "Name": "eks-gitlab-vpc"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route",
      "name": "public_internet_gateway",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "core_network_arn": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-046ded18bf6546641",
            "id": "r-rtb-0fd007b5347556dc11080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-0fd007b5347556dc1",
            "state": "active",
            "timeouts": {
              "create": "5m",
              "delete": null,
              "update": null
            },
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_internet_gateway.this",
            "module.vpc.module.vpc.aws_route_table.public",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:route-table/rtb-05b2f37df7d546359",
            "id": "rtb-05b2f37df7d546359",
            "owner_id": "339712838104",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "eks-gitlab-vpc-private-us-east-1a"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-private-us-east-1a"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:route-table/rtb-0b6166599b93f15c2",
            "id": "rtb-0b6166599b93f15c2",
            "owner_id": "339712838104",
            "propagating_vgws": [],
            "route": [],
            "tags": {
              "Name": "eks-gitlab-vpc-private-us-east-1b"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-private-us-east-1b"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:route-table/rtb-0fd007b5347556dc1",
            "id": "rtb-0fd007b5347556dc1",
            "owner_id": "339712838104",
            "propagating_vgws": [],
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-046ded18bf6546641",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "eks-gitlab-vpc-public"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-public"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-031d6ae6c6f05a01b",
            "route_table_id": "rtb-05b2f37df7d546359",
            "subnet_id": "subnet-09ec127f68b6d6f77",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_route_table.database",
            "module.vpc.module.vpc.aws_route_table.private",
            "module.vpc.module.vpc.aws_subnet.database",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0f5191142fa5392a9",
            "route_table_id": "rtb-0b6166599b93f15c2",
            "subnet_id": "subnet-094a1daaf674e437d",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_route_table.database",
            "module.vpc.module.vpc.aws_route_table.private",
            "module.vpc.module.vpc.aws_subnet.database",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-0f17b33c7649417a5",
            "route_table_id": "rtb-05b2f37df7d546359",
            "subnet_id": "subnet-0bd92c39c351103e0",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_route_table.private",
            "module.vpc.module.vpc.aws_subnet.private",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-047cbca1bf5ea941d",
            "route_table_id": "rtb-0b6166599b93f15c2",
            "subnet_id": "subnet-07baebba8fa24261f",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_route_table.private",
            "module.vpc.module.vpc.aws_subnet.private",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-027d2ba7b1342c3d4",
            "route_table_id": "rtb-0fd007b5347556dc1",
            "subnet_id": "subnet-048969fd7775ea556",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_route_table.public",
            "module.vpc.module.vpc.aws_subnet.public",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-00bed1c94a27106b9",
            "route_table_id": "rtb-0fd007b5347556dc1",
            "subnet_id": "subnet-05dc556ad99896454",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vpc.module.vpc.aws_route_table.public",
            "module.vpc.module.vpc.aws_subnet.public",
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "database",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:subnet/subnet-09ec127f68b6d6f77",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az4",
            "cidr_block": "10.0.3.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-09ec127f68b6d6f77",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "339712838104",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "eks-gitlab-vpc-db-us-east-1a",
              "Type": "Private Database Subnets"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-db-us-east-1a",
              "Type": "Private Database Subnets"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:subnet/subnet-094a1daaf674e437d",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "availability_zone_id": "use1-az6",
            "cidr_block": "10.0.4.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-094a1daaf674e437d",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "339712838104",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "eks-gitlab-vpc-db-us-east-1b",
              "Type": "Private Database Subnets"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-db-us-east-1b",
              "Type": "Private Database Subnets"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "private",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:subnet/subnet-0bd92c39c351103e0",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az4",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0bd92c39c351103e0",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "339712838104",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "eks-gitlab-vpc-private-us-east-1a",
              "Type": "private-subnets",
              "kubernetes.io/cluster/ekscluster": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-private-us-east-1a",
              "Type": "private-subnets",
              "kubernetes.io/cluster/ekscluster": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:subnet/subnet-07baebba8fa24261f",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "availability_zone_id": "use1-az6",
            "cidr_block": "10.0.2.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-07baebba8fa24261f",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": false,
            "outpost_arn": "",
            "owner_id": "339712838104",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "eks-gitlab-vpc-private-us-east-1b",
              "Type": "private-subnets",
              "kubernetes.io/cluster/ekscluster": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-private-us-east-1b",
              "Type": "private-subnets",
              "kubernetes.io/cluster/ekscluster": "shared",
              "kubernetes.io/role/internal-elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_subnet",
      "name": "public",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:subnet/subnet-048969fd7775ea556",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az4",
            "cidr_block": "10.0.101.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-048969fd7775ea556",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "339712838104",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "eks-gitlab-vpc-public-us-east-1a",
              "Type": "Public Subnets",
              "kubernetes.io/cluster/ekscluster": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-public-us-east-1a",
              "Type": "Public Subnets",
              "kubernetes.io/cluster/ekscluster": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:subnet/subnet-05dc556ad99896454",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1b",
            "availability_zone_id": "use1-az6",
            "cidr_block": "10.0.102.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-05dc556ad99896454",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "339712838104",
            "private_dns_hostname_type_on_launch": "ip-name",
            "tags": {
              "Name": "eks-gitlab-vpc-public-us-east-1b",
              "Type": "Public Subnets",
              "kubernetes.io/cluster/ekscluster": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc-public-us-east-1b",
              "Type": "Public Subnets",
              "kubernetes.io/cluster/ekscluster": "shared",
              "kubernetes.io/role/elb": "1"
            },
            "timeouts": null,
            "vpc_id": "vpc-04995685231f22c83"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vpc.module.vpc.aws_vpc.this",
            "module.vpc.module.vpc.aws_vpc_ipv4_cidr_block_association.this"
          ]
        }
      ]
    },
    {
      "module": "module.vpc.module.vpc",
      "mode": "managed",
      "type": "aws_vpc",
      "name": "this",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:339712838104:vpc/vpc-04995685231f22c83",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-03279f42ff117d7ac",
            "default_route_table_id": "rtb-0ea76b9b80c7c2b23",
            "default_security_group_id": "sg-07fa0b02c57686dd9",
            "dhcp_options_id": "dopt-08a726ac35ffadb43",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-04995685231f22c83",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0ea76b9b80c7c2b23",
            "owner_id": "339712838104",
            "tags": {
              "Name": "eks-gitlab-vpc"
            },
            "tags_all": {
              "Name": "eks-gitlab-vpc"
            }
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
